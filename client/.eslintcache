[{"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\index.js":"1","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reportWebVitals.js":"2","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\App.js":"3","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemList\\ProblemList.js":"4","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\LandingPage.js":"5","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Header\\Header.js":"6","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\index.js":"7","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\index.js":"8","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\index.js":"9","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Int.js":"10","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Float.js":"11","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\VariableContainer.js":"12","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_String.js":"13","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputFormat\\InputFormat.js":"14","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlocks.js":"15","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlock.js":"16","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\CodeBox\\CodeBox.js":"17","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Test\\index.js":"18"},{"size":478,"mtime":1609749954541,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":975,"mtime":1611652815200,"results":"22","hashOfConfig":"20"},{"size":1630,"mtime":1612292631168,"results":"23","hashOfConfig":"20"},{"size":1335,"mtime":1612385281734,"results":"24","hashOfConfig":"20"},{"size":2008,"mtime":1612375154812,"results":"25","hashOfConfig":"20"},{"size":4403,"mtime":1611635419582,"results":"26","hashOfConfig":"20"},{"size":1646,"mtime":1611654251707,"results":"27","hashOfConfig":"20"},{"size":5730,"mtime":1612293288512,"results":"28","hashOfConfig":"20"},{"size":1957,"mtime":1611004891313,"results":"29","hashOfConfig":"20"},{"size":1920,"mtime":1609843279575,"results":"30","hashOfConfig":"20"},{"size":3932,"mtime":1611005546982,"results":"31","hashOfConfig":"20"},{"size":2135,"mtime":1609836810607,"results":"32","hashOfConfig":"20"},{"size":812,"mtime":1610736237171,"results":"33","hashOfConfig":"20"},{"size":1904,"mtime":1611005722385,"results":"34","hashOfConfig":"20"},{"size":3447,"mtime":1611005695782,"results":"35","hashOfConfig":"20"},{"size":1201,"mtime":1611949822400,"results":"36","hashOfConfig":"20"},{"size":6528,"mtime":1612126100237,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1o6rytm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\index.js",[],["84","85"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reportWebVitals.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\App.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemList\\ProblemList.js",["86","87","88"],"import React,{useState,useEffect} from 'react'\r\nimport { List, Typography, Divider } from 'antd';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n//const _axios = axios.create({baseURL: 'http://localhost:5000'})\r\n\r\nfunction ProblemList(props) {\r\n\r\n    const [Problems, setProblems] = useState([])\r\n    const [Search, setSearch] = useState(\"\")\r\n    useEffect(() => {\r\n        //console.log(Search)\r\n    }, [Search])\r\n    // useEffect(() => {\r\n    //     getProblemList()\r\n    // }, [])\r\n\r\n    const handleSearch=(e)=>{\r\n        setSearch(e.target.value)\r\n    }\r\n    const getProblemList= async (e)=>{\r\n        e.preventDefault()\r\n        const request=await axios.get('/problem/getList',{\r\n            params:{\r\n                search:Search\r\n            }\r\n        })\r\n        setProblems(request.data)\r\n        console.log(Problems)\r\n    }\r\n    const problemName=Problems[0]&&Problems.map((ele)=>{\r\n        return <a href={`problem/${ele._id}`}>[ {ele.id} ]  {ele.title}</a>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n             <List\r\n                header={<form><input value={Search} onChange={handleSearch}/><button onClick={getProblemList}>검색</button></form>}\r\n                footer={<div>Footer</div>}\r\n                bordered\r\n                dataSource={problemName}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                     {item}\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <button onClick={()=>{props.history.push('/problem/create')}}>문제 작성</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProblemList\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\LandingPage.js",["89","90","91","92","93"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\index.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\index.js",["94","95"],"import React,{useEffect,useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport ProblemSetting from '../../commons/ProblemSetting/index';\r\nimport {Button} from 'antd'\r\nimport { useHistory } from 'react-router-dom'\r\nfunction Problem(props) {\r\n\r\n    \r\n    const problem_Id=props.match.params.problem_Id\r\n    const [Setting, setSetting] = useState({})\r\n    useEffect(async () => {\r\n        const request=await axios.get('/problem',{\r\n            params:{\r\n                _id:problem_Id\r\n            }\r\n        })\r\n        setSetting(request.data)\r\n    }, [])\r\n\r\n   const history=useHistory()\r\n    \r\n\r\n    const getChildState=(state)=>{\r\n        setSetting(state)\r\n    }\r\n    return (\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n            <Wrapper>\r\n                <h2>[{Setting.id}] {Setting.title}</h2>\r\n                {Setting.variables&&\r\n                    <ProblemSetting setting={Setting} sendState={getChildState}/>\r\n                }\r\n\r\n                <button onClick={()=>{\r\n                    console.log(Setting)\r\n                    }}>Setting</button>\r\n                <Button onClick={()=>{\r\n                    history.push({\r\n                        pathname:`/problem/${problem_Id}/test`,\r\n                        state:{setting:Setting}\r\n                })\r\n                }}>테스트</Button>\r\n            </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\ndisplay:flex ;\r\nflex-direction: column;\r\nalign-items: center;\r\ntext-align: center;\r\nwidth: 60%;\r\nmin-width:1000px;\r\nbackground-color: RGB(250, 250, 250);\r\n`\r\n\r\nexport default Problem\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\index.js",["96","97","98","99","100","101"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Int.js",["102"],"import React,{useState,useEffect} from 'react'\r\nimport { Input,Descriptions,Checkbox,InputNumber } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nfunction _Int(props) {\r\n\r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e})\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e})\r\n    }\r\n    const handleFix=(e)=>{\r\n        console.log(Data)\r\n        console.log(props.data)\r\n        setData({...Data,fix:e.target.checked})\r\n    }\r\n    useEffect(() => {\r\n        props.changeVariable(Data)\r\n    }, [Data])\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    },[props.data])\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 8, sm: 16, md: 24}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                Int\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소값\" style={{width:'20%',textAlign:'center'}}>\r\n                <InputNumber value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대값\" style={{width:'20%',textAlign:'center'}}>\r\n                <InputNumber value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _Int\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Float.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\VariableContainer.js",["103","104","105","106","107","108"],"import React,{useState,useEffect} from 'react'\r\nimport _Int from './_Int'\r\nimport _Float from './_Float'\r\nimport _String from './_String'\r\nimport {Button} from 'antd'\r\n\r\nfunction VariableContainer(props) {\r\n    const [Variables, setVariables] = useState(props.default)\r\n    const [VariableIndex, setVariableIndex] = useState(1)\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [Variables])\r\n\r\n\r\n    const addInt=()=>{\r\n        let temp=[...Variables,{ type:'int',name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addFloat=()=>{\r\n        let temp=[...Variables,{ type:'float', name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addString=()=>{\r\n        let temp=[...Variables,{ type:'string',name:String.fromCharCode(97+VariableIndex),min:1,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n\r\n    const changeVariable=(index)=>{\r\n        return(\r\n            (changedState)=>{\r\n            let temp=Variables\r\n            temp[index]=changedState\r\n            setVariables(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteVariable= (index)=>{\r\n        let temp=[...Variables]\r\n        temp.splice(index,1)\r\n        setVariables(temp)\r\n    }\r\n    // const printVariables=()=>{\r\n    //     setVariables([{type:'int',name:'asd',min:0,max:5,fix:true},{type:'int',name:'asd',min:0,max:5,fix:true}])\r\n    //     console.log(Variables);\r\n    // }\r\n\r\n\r\n\r\n    const renderVariables=Variables.map((variable,index)=>{\r\n        switch (variable.type) {\r\n            case 'int':\r\n                return(\r\n                    <div key={index} style={{display:'flex',justifyContent:'center',alignItems:'center',marginTop:'10px',width:'1000px'}}>\r\n                        <_Int data={variable} style={{width:'1200px'}} changeVariable={changeVariable(index)}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )\r\n            case 'float':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                        <_Float data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )   \r\n            case 'string':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center'}}>\r\n                        <_String data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                ) \r\n            default:\r\n                return;\r\n        }\r\n    })\r\n    return (\r\n        <div style={{display:'flex',flexDirection:'column',alignItems:'center',width:'100%'}}>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                <Button style={{margin:'20px'}}  onClick={addInt}>Int</Button>\r\n                <Button style={{margin:'20px'}} disabled={true} onClick={addFloat}>Float</Button>\r\n                <Button style={{margin:'20px'}} disabled={true} onClick={addString}>String</Button>\r\n            </div>\r\n            <div style={{ marginBottom: 16,display:'flex',flexDirection:'column',alignItems:'center',width:'100%' }}>\r\n                {renderVariables}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VariableContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_String.js",["109"],"import React,{useState} from 'react'\r\nimport { Input, Select,Descriptions,Checkbox } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction _String(props) {\r\n \r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n        props.changeVariable({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleFix=(e)=>{\r\n        setData({...Data,fix:e.target.checked})\r\n        props.changeVariable(Data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 5, sm: 5, md: 5}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                String\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"구성요소\" style={{width:'100%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _String\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputFormat\\InputFormat.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlocks.js",["110","111","112"],"import React,{useState,useEffect} from 'react'\r\nimport InputBlock from './InputBlock'\r\nimport {Button} from 'antd'\r\n\r\nfunction InputBlockContainer(props) {\r\n    const makeEmptyArray=()=>{\r\n        let result=[]\r\n        for(let j=0;j<10;j++){\r\n            let temp=[]\r\n            for(let i=0;i<10;i++){\r\n                temp.push(\"\")\r\n            }   \r\n            result.push(temp)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const [InputBlocks, setInputBlocks] = useState(props.default)\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBlocks)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBlocks)\r\n    }, [InputBlocks])\r\n\r\n    const changeInputBoxs=(index)=>{\r\n        return(\r\n            (box)=>{\r\n                let temp=InputBlocks\r\n                temp[index]=box\r\n                setInputBlocks(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteInputBox=(index)=>{\r\n        let temp=[...InputBlocks]\r\n        temp.splice(index,1)\r\n        setInputBlocks(temp)\r\n    }\r\n\r\n\r\n    const renderBoxs=InputBlocks.map((item,index)=>{\r\n        if(!item.inputs){\r\n            return\r\n        }\r\n        return(\r\n            <div key={index}  style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                <InputBlock data={item} sendState={changeInputBoxs(index)}/>\r\n                <Button onClick={()=>deleteInputBox(index)} type=\"primary\" style={{marginLeft:'20px'}} danger>삭제</Button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const addInputBlocks=()=>{\r\n        let temp=[...InputBlocks,{inputs:makeEmptyArray(),width:1,height:1,horizonRep:1,verticalRep:1}]\r\n        setInputBlocks(temp)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            {renderBoxs}\r\n            <Button onClick={addInputBlocks} style={{margin:'5px'}}>추가</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBlockContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlock.js",["113","114"],"import React,{useState,useEffect} from 'react'\r\nimport {Input} from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nfunction InputBlock(props) {\r\n    const [Data, setData] = useState(props.data)\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [])\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [Data])\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    }, [props.data])\r\n    const handleWidth=(e)=>{\r\n        setData({...Data,width:e.target.value})\r\n    }\r\n    const handleHeight=(e)=>{\r\n        setData({...Data,height:e.target.value})\r\n    }\r\n    const handleHorizonRep=(e)=>{\r\n        setData({...Data,horizonRep:e.target.value})\r\n    }\r\n    const handelVerticalRep=(e)=>{\r\n        setData({...Data,verticalRep:e.target.value})\r\n    }\r\n    const handleInputs=(y,x,e)=>{\r\n        let temp=Data.inputs\r\n        temp[y][x]=e.target.value\r\n        setData({...Data,inputs:temp})\r\n    }\r\n\r\n\r\n    const makeBox=(width,height)=>{\r\n        \r\n        let box=[]\r\n        for(let y=0;y<height;y++){\r\n            let row=[]\r\n            for(let x=0;x<width;x++){\r\n                row.push(<Input key={x} value={Data.inputs[y][x]} onChange={(e)=>handleInputs(y,x,e)} style={{width:'50px',height:'30px',margin:'5px'}}/>)\r\n            }\r\n            box.push(row)\r\n        }\r\n        return(\r\n            <div id=\"box\" className='flex-column' style={{width:'400px'}}>\r\n                {\r\n                    box.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} style={{display:'flex'}}>\r\n                                {item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Wrapper key={Data.index} className='flex-row' style={{backgroundColor:'RGB(220, 220, 220)', padding:'20px'}}>\r\n            <div style={{background:'RGB(250, 250, 250', borderRadius:'5px'}}>\r\n                {Data.inputs[0]&& makeBox(Data.width,Data.height)}\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>가로 : </div><Input value={Data.width} onChange={handleWidth} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>세로 : </div><Input value={Data.height} onChange={handleHeight} style={{width:'50px'}}/></div>\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 가로 반복 : </div><Input value={Data.horizonRep} onChange={handleHorizonRep} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 세로 반복 : </div><Input value={Data.verticalRep} onChange={handelVerticalRep} style={{width:'50px'}}/></div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .flex-row{\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .flex-column{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nexport default InputBlock\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\CodeBox\\CodeBox.js",["115"],"import React,{useState,useEffect} from 'react'\r\nimport Editor from \"@monaco-editor/react\";\r\n\r\nfunction CodeBox(props) {\r\n    const [Code, setCode] = useState(props.value)\r\n    const handleCode=(code,e)=>{\r\n        setCode({...Code,code:code})\r\n    }\r\n    const handelLanguage=(e)=>{\r\n        setCode({...Code,language:e.target.value})\r\n    }\r\n    useEffect(() => {\r\n        props.sendState(Code)\r\n    }, [Code])\r\n    return (\r\n        <div>\r\n            <select value = {Code.language} onChange={handelLanguage}>\r\n                <option value=\"c\">C</option>\r\n                <option value=\"cpp\">C++</option>\r\n                <option value=\"java\">Java</option>\r\n                <option value=\"python\">Python</option>\r\n                <option value=\"r\">R</option>\r\n            </select>\r\n            <div   style={{border:'solid 1px', width:'500px',height:'600px'}}>\r\n                <Editor\r\n                        width='100%'\r\n                        height='100%'\r\n                        language={Code.language}\r\n                        value={Code.code}\r\n                        onChange={handleCode}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodeBox\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Test\\index.js",["116"],"import React,{useState,useRef} from 'react'\r\nimport CodeBox from '../../commons/CodeBox/CodeBox'\r\nimport {useLocation} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport {Button,Table,Modal, Result} from 'antd'\r\nimport axios from 'axios'\r\n\r\nfunction Test() {\r\n    const location=useLocation()\r\n    const setting=location.state.setting\r\n    const textAreaRef = useRef(null);\r\n\r\n    const [MyCode, setMyCode] = useState({language:'python',code:''})\r\n    const [Loading, setLoading] = useState(false)\r\n    const [Outputs, setOutputs] = useState([])\r\n    const [ModalVisible, setModalVisible] = useState(false)\r\n    const [ModalIndex, setModalIndex] = useState(0)\r\n    const handleMyCode=(code)=>{\r\n        setMyCode(code)\r\n    }\r\n    const getOutputs=()=>{\r\n        setLoading(true)\r\n\r\n        axios.get('/problem/test',{\r\n            params:{\r\n                problem:{...setting,myCode:MyCode}\r\n            }\r\n        }).then((res)=>{\r\n            console.log(res.data)\r\n            setLoading(false)\r\n            setOutputs(res.data.outputs)\r\n        })\r\n    }\r\n    const getData=(outputs)=>{\r\n        return outputs.map((output,idx)=>({\r\n            idx:idx,\r\n            myTime:output.myTime,\r\n            testTime:output.testTime,\r\n            result:output.result\r\n        }))\r\n    }\r\n    const showModal=(idx)=>{ \r\n        setModalIndex(idx)   \r\n        setModalVisible(true)\r\n    }\r\n    const columns=[\r\n        {title:\"번호\",dataIndex:'idx'},\r\n        {title:'내 시간',dataIndex:'myTime'},\r\n        {title:'정답 시간',dataIndex:'testTime'},\r\n        {title:'결과',dataIndex:'result'},\r\n        {\r\n            title:'데이터 확인',dataIndex:'idx',\r\n            render:(idx)=><Button onClick={()=>{showModal(idx)}}>확인</Button>\r\n        }\r\n    ]\r\n\r\n    function copyToClipboard(e) {\r\n        textAreaRef.current.select();//텍스트 선택\r\n        document.execCommand('copy');//복사\r\n        e.target.focus();//선택 해제\r\n    };\r\n    return (\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n            <Wrapper>\r\n                <div className=\"content-container\">\r\n                    <div className='header'>\r\n                        <h1 className='title'>테스트 코드 작성</h1>\r\n                        <h3 className='description'>테스트할 코드를 작성하세요</h3>\r\n                    </div>\r\n                    <CodeBox value={MyCode} sendState={handleMyCode} style={{height:'400px'}}/>\r\n                    <Button onClick={()=>getOutputs()}>test</Button> \r\n                </div>\r\n\r\n                <div className=\"content-container\">\r\n                    <h1 className='title'>테스트 결과</h1>\r\n                    <h3 className='description'>테스트할 코드를 작성하세요</h3>\r\n                    <Table\r\n                        columns={columns}\r\n                        dataSource={getData(Outputs)}\r\n                        pagination={false}\r\n                        bordered={true}\r\n                        loading={Loading}\r\n                    />\r\n                </div>\r\n                <Modal title={ModalIndex+'번 데이터'} visible={ModalVisible}  onCancel={()=>setModalVisible(false)} width={800}>\r\n                    <div style={{display:'flex',flexDirection:'column',width:'300px'}}>\r\n                        <div style={{display:'flex', justifyContent:'center'}}>\r\n                            <h3>입력값</h3>\r\n                            <button onClick={copyToClipboard} style={{justifySelf:'flex-end'}}>복사</button>\r\n                        </div>\r\n                        <textarea \r\n                            ref={textAreaRef}\r\n                            value={Outputs[ModalIndex]&&Outputs[ModalIndex].input}\r\n                            style={{\r\n                                width:'300px',\r\n                                height:'300px',\r\n                                overflowX:'scroll auto',\r\n                                overflowY:'scroll auto',\r\n                            }}\r\n                        />\r\n                    </div>\r\n                   \r\n                    <div style={{display:'flex'}}>\r\n                        <div style={{display:'flex',flexDirection:'column',width:'300px'}}>\r\n                            <div style={{display:'flex', justifyContent:'center'}}>\r\n                                <h3>내 결과</h3>\r\n                            </div>\r\n                            <textarea \r\n                                value={Outputs[ModalIndex]&&Outputs[ModalIndex].myOutput}\r\n                                style={{\r\n                                    width:'300px',\r\n                                    height:'300px',\r\n                                    overflowX:'scroll auto',\r\n                                    overflowY:'scroll auto',\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div style={{display:'flex',flexDirection:'column',width:'300px'}}>\r\n                            <div style={{display:'flex', justifyContent:'center'}}>\r\n                                <h3>정답</h3>\r\n                            </div>\r\n                            <textarea \r\n                                value={Outputs[ModalIndex]&&Outputs[ModalIndex].testOutput}\r\n                                style={{\r\n                                    width:'300px',\r\n                                    height:'300px',\r\n                                    overflowX:'scroll auto',\r\n                                    overflowY:'scroll auto',\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </Wrapper>\r\n          \r\n        </div>\r\n    )\r\n}\r\nconst Wrapper=styled.div`\r\ndisplay:flex ;\r\nflex-direction: column;\r\nalign-items: center;\r\ntext-align: center;\r\nwidth: 60%;\r\nmin-width:1000px;\r\nbackground-color: RGB(250, 250, 250);\r\n\r\n.content-container{\r\n    display:flex ;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    border: 1px solid lightgray;\r\n    margin: 50px;\r\n    .header{\r\n        width: 100%;\r\n        display:flex ;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-bottom:20px;\r\n        .title{\r\n            font-size:2rem;\r\n        }\r\n    }\r\n  \r\n}  \r\n`\r\nexport default Test\r\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":2,"column":16,"nodeType":"123","messageId":"124","endLine":2,"endColumn":26},{"ruleId":"121","severity":1,"message":"125","line":2,"column":28,"nodeType":"123","messageId":"124","endLine":2,"endColumn":35},{"ruleId":"121","severity":1,"message":"126","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"127","line":1,"column":15,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"128","line":3,"column":9,"nodeType":"123","messageId":"124","endLine":3,"endColumn":15},{"ruleId":"121","severity":1,"message":"129","line":3,"column":16,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},{"ruleId":"121","severity":1,"message":"130","line":3,"column":21,"nodeType":"123","messageId":"124","endLine":3,"endColumn":26},{"ruleId":"121","severity":1,"message":"131","line":3,"column":27,"nodeType":"123","messageId":"124","endLine":3,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":12,"column":15,"nodeType":"134","endLine":19,"endColumn":6},{"ruleId":"132","severity":1,"message":"135","line":19,"column":8,"nodeType":"136","endLine":19,"endColumn":10,"suggestions":"137"},{"ruleId":"121","severity":1,"message":"138","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":12},{"ruleId":"121","severity":1,"message":"139","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":14},{"ruleId":"121","severity":1,"message":"140","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":15},{"ruleId":"132","severity":1,"message":"141","line":24,"column":8,"nodeType":"136","endLine":24,"endColumn":17,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":41,"column":30,"nodeType":"145","messageId":"146","endLine":41,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":43,"column":36,"nodeType":"145","messageId":"146","endLine":43,"endColumn":38},{"ruleId":"132","severity":1,"message":"141","line":23,"column":8,"nodeType":"136","endLine":23,"endColumn":14,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"148","line":12,"column":8,"nodeType":"136","endLine":12,"endColumn":10,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"141","line":16,"column":8,"nodeType":"136","endLine":16,"endColumn":19,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":62,"column":25,"nodeType":"153","endLine":62,"endColumn":112},{"ruleId":"151","severity":1,"message":"154","line":69,"column":25,"nodeType":"153","endLine":69,"endColumn":82},{"ruleId":"151","severity":1,"message":"155","line":76,"column":25,"nodeType":"153","endLine":76,"endColumn":83},{"ruleId":"156","severity":1,"message":"157","line":81,"column":17,"nodeType":"158","messageId":"159","endLine":81,"endColumn":24},{"ruleId":"121","severity":1,"message":"160","line":2,"column":17,"nodeType":"123","messageId":"124","endLine":2,"endColumn":23},{"ruleId":"132","severity":1,"message":"161","line":22,"column":8,"nodeType":"136","endLine":22,"endColumn":10,"suggestions":"162"},{"ruleId":"132","severity":1,"message":"141","line":26,"column":8,"nodeType":"136","endLine":26,"endColumn":21,"suggestions":"163"},{"ruleId":"156","severity":1,"message":"157","line":46,"column":13,"nodeType":"158","messageId":"159","endLine":46,"endColumn":19},{"ruleId":"132","severity":1,"message":"164","line":9,"column":8,"nodeType":"136","endLine":9,"endColumn":10,"suggestions":"165"},{"ruleId":"132","severity":1,"message":"141","line":12,"column":8,"nodeType":"136","endLine":12,"endColumn":14,"suggestions":"166"},{"ruleId":"132","severity":1,"message":"141","line":14,"column":8,"nodeType":"136","endLine":14,"endColumn":14,"suggestions":"167"},{"ruleId":"121","severity":1,"message":"168","line":5,"column":29,"nodeType":"123","messageId":"124","endLine":5,"endColumn":35},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'styled' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Checkbox' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'problem_Id'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'_Int' is defined but never used.","'_Float' is defined but never used.","'_String' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["172"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["173"],"React Hook useEffect has missing dependencies: 'Variables' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["174"],["175"],"react/jsx-pascal-case","Imported JSX component _Int must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component _Float must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _String must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'InputBlocks' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["176"],["177"],"React Hook useEffect has missing dependencies: 'Data' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["178"],["179"],["180"],"'Result' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"185","fix":"193"},{"desc":"185","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [problem_Id]",{"range":"197","text":"198"},"Update the dependencies array to be: [Setting, props]",{"range":"199","text":"200"},"Update the dependencies array to be: [Data, props]",{"range":"201","text":"202"},"Update the dependencies array to be: [Variables, props]",{"range":"203","text":"204"},{"range":"205","text":"204"},"Update the dependencies array to be: [InputBlocks, props]",{"range":"206","text":"207"},{"range":"208","text":"207"},{"range":"209","text":"202"},{"range":"210","text":"202"},"Update the dependencies array to be: [Code, props]",{"range":"211","text":"212"},[595,597],"[problem_Id]",[811,820],"[Setting, props]",[651,657],"[Data, props]",[395,397],"[Variables, props]",[468,479],[565,567],"[InputBlocks, props]",[640,653],[259,261],[325,331],[404,410],"[Code, props]"]