[{"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\index.js":"1","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\reportWebVitals.js":"2","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\App.js":"3","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\Header\\Header.js":"4","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\pages\\ProblemList.js":"5","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\pages\\LandingPage.js":"6","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\pages\\GenerateData\\GenerateData.js":"7","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\InputContainer\\InputContainer.js":"8","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\InputContainer\\InputBox.js":"9","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\Variable\\_Float.js":"10","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\Variable\\_Int.js":"11","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\Variable\\_String.js":"12","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\Variable\\VariableContainer.js":"13","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\FormatBox\\FormatBox.js":"14"},{"size":478,"mtime":1609749954541,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":705,"mtime":1610607580983,"results":"18","hashOfConfig":"16"},{"size":1876,"mtime":1610480093323,"results":"19","hashOfConfig":"16"},{"size":1427,"mtime":1610607339430,"results":"20","hashOfConfig":"16"},{"size":534,"mtime":1610607351140,"results":"21","hashOfConfig":"16"},{"size":6065,"mtime":1610613023468,"results":"22","hashOfConfig":"16"},{"size":1982,"mtime":1610609267819,"results":"23","hashOfConfig":"16"},{"size":3504,"mtime":1610610556220,"results":"24","hashOfConfig":"16"},{"size":1920,"mtime":1609843279575,"results":"25","hashOfConfig":"16"},{"size":1826,"mtime":1610089405135,"results":"26","hashOfConfig":"16"},{"size":2135,"mtime":1609836810607,"results":"27","hashOfConfig":"16"},{"size":3944,"mtime":1610609164884,"results":"28","hashOfConfig":"16"},{"size":781,"mtime":1610610963959,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1inlq3x",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\index.js",[],["64","65"],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\reportWebVitals.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\App.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\pages\\ProblemList.js",["66","67","68"],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\pages\\LandingPage.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\pages\\GenerateData\\GenerateData.js",["69","70","71","72","73","74","75","76"],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\InputContainer\\InputContainer.js",["77","78","79"],"import React,{useState,useEffect} from 'react'\r\nimport InputBox from './InputBox'\r\nimport {Button} from 'antd'\r\n\r\nfunction InputContainer(props) {\r\n    const makeEmptyArray=()=>{\r\n        let result=[]\r\n        for(let j=0;j<10;j++){\r\n            let temp=[]\r\n            for(let i=0;i<10;i++){\r\n                temp.push(\"\")\r\n            }   \r\n            result.push(temp)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const [InputBoxs, setInputBoxs] = useState(props.default)\r\n    const [ReRender, setReRender] = useState(0)\r\n    const reRender=()=>{\r\n        setReRender(ReRender+1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBoxs)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBoxs)\r\n    }, [InputBoxs])\r\n\r\n    const changeInputBoxs=(index)=>{\r\n        return(\r\n            (box)=>{\r\n                let temp=InputBoxs\r\n                temp[index]=box\r\n                setInputBoxs(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteInputBox=(index)=>{\r\n        let temp=InputBoxs\r\n        temp[index]={}\r\n        setInputBoxs(temp)\r\n        reRender()\r\n    }\r\n\r\n\r\n    const renderBoxs=InputBoxs.map((item,index)=>{\r\n        if(!item.inputs){\r\n            return\r\n        }\r\n        return(\r\n            <div key={index}  style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                <InputBox data={item} sendState={changeInputBoxs(index)}/>\r\n                <Button onClick={()=>deleteInputBox(index)} type=\"primary\" style={{marginLeft:'20px'}} danger>삭제</Button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const addInputBox=()=>{\r\n        let temp=[...InputBoxs,{inputs:makeEmptyArray(),width:2,height:1,horizonRep:1,verticalRep:1}]\r\n        setInputBoxs(temp)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            {renderBoxs}\r\n            <Button onClick={addInputBox} style={{margin:'5px'}}>추가</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputContainer\r\n","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\InputContainer\\InputBox.js",["80","81"],"import React,{useState,useEffect} from 'react'\r\nimport {Input} from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nfunction InputBox(props) {\r\n    const [Data, setData] = useState(props.data)\r\n    const [ReRender, setReRender] = useState(0)\r\n    const reRender=()=>{\r\n        setReRender(ReRender+1)\r\n    }\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [])\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [Data])\r\n    const handleWidth=(e)=>{\r\n        setData({...Data,width:e.target.value})\r\n    }\r\n    const handleHeight=(e)=>{\r\n        setData({...Data,height:e.target.value})\r\n    }\r\n    const handleHorizonRep=(e)=>{\r\n        setData({...Data,horizonRep:e.target.value})\r\n    }\r\n    const handelVerticalRep=(e)=>{\r\n        setData({...Data,verticalRep:e.target.value})\r\n    }\r\n    const handleInputs=(y,x,e)=>{\r\n        let temp=Data.inputs\r\n        temp[y][x]=e.target.value\r\n        setData({...Data,inputs:temp})\r\n        reRender()\r\n    }\r\n\r\n\r\n    const makeBox=(width,height)=>{\r\n        \r\n        let box=[]\r\n        for(let y=0;y<height;y++){\r\n            let row=[]\r\n            for(let x=0;x<width;x++){\r\n                row.push(<Input key={x} value={Data.inputs[y][x]} onChange={(e)=>handleInputs(y,x,e)} style={{width:'50px',height:'30px',margin:'5px'}}/>)\r\n            }\r\n            box.push(row)\r\n        }\r\n        return(\r\n            <div id=\"box\" className='flex-column' style={{width:'400px'}}>\r\n                {\r\n                    box.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} style={{display:'flex'}}>\r\n                                {item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Wrapper key={Data.index} className='flex-row' style={{backgroundColor:'RGB(220, 220, 220)', padding:'20px'}}>\r\n            <div style={{background:'RGB(250, 250, 250', borderRadius:'5px'}}>\r\n                {Data.inputs[0]&& makeBox(Data.width,Data.height)}\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>가로 : </div><Input value={Data.width} onChange={handleWidth} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>세로 : </div><Input value={Data.height} onChange={handleHeight} style={{width:'50px'}}/></div>\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 가로 반복 : </div><Input value={Data.horizonRep} onChange={handleHorizonRep} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 세로 반복 : </div><Input value={Data.verticalRep} onChange={handelVerticalRep} style={{width:'50px'}}/></div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .flex-row{\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .flex-column{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nexport default InputBox\r\n","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\Variable\\_Float.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\Variable\\_Int.js",["82"],"import React,{useState,useEffect} from 'react'\r\nimport { Input,Descriptions,Checkbox,InputNumber } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nfunction _Int(props) {\r\n\r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e})\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e})\r\n    }\r\n    const handleFix=(e)=>{\r\n        setData({...Data,fix:e.target.checked})\r\n    }\r\n    useEffect(() => {\r\n        props.changeVariable(Data)\r\n    }, [Data])\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 8, sm: 16, md: 24}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                Int\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소값\" style={{width:'20%',textAlign:'center'}}>\r\n                <InputNumber value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대값\" style={{width:'20%',textAlign:'center'}}>\r\n                <InputNumber value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _Int\r\n","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\Variable\\_String.js",["83"],"import React,{useState} from 'react'\r\nimport { Input, Select,Descriptions,Checkbox } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction _String(props) {\r\n \r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n        props.changeVariable({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleFix=(e)=>{\r\n        setData({...Data,fix:e.target.checked})\r\n        props.changeVariable(Data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 5, sm: 5, md: 5}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                String\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"구성요소\" style={{width:'100%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _String\r\n","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\Variable\\VariableContainer.js",["84","85","86","87","88","89","90"],"import React,{useState,useEffect} from 'react'\r\nimport _Int from './_Int'\r\nimport _Float from './_Float'\r\nimport _String from './_String'\r\nimport {Button} from 'antd'\r\n\r\nfunction VariableContainer(props) {\r\n    const [Variables, setVariables] = useState(props.default)\r\n    const [VariableIndex, setVariableIndex] = useState(1)\r\n    const [ReRender, setReRender] = useState(0)\r\n    const reRender=()=>{\r\n        setReRender(ReRender+1)\r\n    }\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [Variables])\r\n\r\n\r\n    const addInt=()=>{\r\n        let temp=[...Variables,{ type:'int',name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addFloat=()=>{\r\n        let temp=[...Variables,{ type:'float', name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addString=()=>{\r\n        let temp=[...Variables,{ type:'string',name:String.fromCharCode(97+VariableIndex),min:1,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n\r\n    const changeVariable=(index)=>{\r\n        return(\r\n            (changedState)=>{\r\n            let temp=Variables\r\n            temp[index]=changedState\r\n            setVariables(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteVariable=(index)=>{\r\n        let temp=Variables\r\n        temp[index]={}\r\n        setVariables(temp)\r\n        reRender()\r\n    }\r\n\r\n    const printVariables=()=>{\r\n        console.log(Variables);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const renderVariables=Variables.map((variable,index)=>{\r\n        switch (variable.type) {\r\n            case 'int':\r\n                return(\r\n                    <div key={index} style={{display:'flex',justifyContent:'center',alignItems:'center',marginTop:'10px',width:'1000px'}}>\r\n                        <_Int data={variable} style={{width:'1200px'}} changeVariable={changeVariable(index)}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )\r\n            case 'float':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                        <_Float data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )   \r\n            case 'string':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center'}}>\r\n                        <_String data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                ) \r\n            default:\r\n                return;\r\n        }\r\n    })\r\n    return (\r\n        <div style={{display:'flex',flexDirection:'column',alignItems:'center',width:'100%'}}>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                <Button style={{margin:'20px'}}  onClick={addInt}>Int</Button>\r\n                <Button style={{margin:'20px'}} disabled={true} onClick={addFloat}>Float</Button>\r\n                <Button style={{margin:'20px'}} disabled={true} onClick={addString}>String</Button>\r\n            </div>\r\n            <div style={{ marginBottom: 16,display:'flex',flexDirection:'column',alignItems:'center',width:'100%' }}>\r\n                {renderVariables}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VariableContainer\r\n","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\commons\\FormatBox\\FormatBox.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":2,"column":28,"nodeType":"97","messageId":"98","endLine":2,"endColumn":35},{"ruleId":"95","severity":1,"message":"100","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"101","line":1,"column":24,"nodeType":"97","messageId":"98","endLine":1,"endColumn":33},{"ruleId":"95","severity":1,"message":"102","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":12},{"ruleId":"95","severity":1,"message":"103","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":14},{"ruleId":"95","severity":1,"message":"104","line":9,"column":8,"nodeType":"97","messageId":"98","endLine":9,"endColumn":15},{"ruleId":"95","severity":1,"message":"105","line":18,"column":12,"nodeType":"97","messageId":"98","endLine":18,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":41,"column":30,"nodeType":"108","messageId":"109","endLine":41,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":43,"column":36,"nodeType":"108","messageId":"109","endLine":43,"endColumn":38},{"ruleId":"95","severity":1,"message":"110","line":48,"column":11,"nodeType":"97","messageId":"98","endLine":48,"endColumn":24},{"ruleId":"111","severity":1,"message":"112","line":26,"column":8,"nodeType":"113","endLine":26,"endColumn":10,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":30,"column":8,"nodeType":"113","endLine":30,"endColumn":19,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":51,"column":13,"nodeType":"119","messageId":"120","endLine":51,"endColumn":19},{"ruleId":"111","severity":1,"message":"121","line":13,"column":8,"nodeType":"113","endLine":13,"endColumn":10,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"115","line":16,"column":8,"nodeType":"113","endLine":16,"endColumn":14,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"115","line":21,"column":8,"nodeType":"113","endLine":21,"endColumn":14,"suggestions":"124"},{"ruleId":"95","severity":1,"message":"125","line":2,"column":17,"nodeType":"97","messageId":"98","endLine":2,"endColumn":23},{"ruleId":"111","severity":1,"message":"126","line":16,"column":8,"nodeType":"113","endLine":16,"endColumn":10,"suggestions":"127"},{"ruleId":"111","severity":1,"message":"115","line":20,"column":8,"nodeType":"113","endLine":20,"endColumn":19,"suggestions":"128"},{"ruleId":"95","severity":1,"message":"129","line":56,"column":11,"nodeType":"97","messageId":"98","endLine":56,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":74,"column":25,"nodeType":"132","endLine":74,"endColumn":112},{"ruleId":"130","severity":1,"message":"133","line":81,"column":25,"nodeType":"132","endLine":81,"endColumn":82},{"ruleId":"130","severity":1,"message":"134","line":88,"column":25,"nodeType":"132","endLine":88,"endColumn":83},{"ruleId":"117","severity":1,"message":"118","line":93,"column":17,"nodeType":"119","messageId":"120","endLine":93,"endColumn":24},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'styled' is defined but never used.","'useEffect' is defined but never used.","'_Int' is defined but never used.","'_Float' is defined but never used.","'_String' is defined but never used.","'OutVariable' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'makeFormatBox' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'InputBoxs' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["137"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["138"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has missing dependencies: 'Data' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["139"],["140"],["141"],"'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'Variables' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["142"],["143"],"'printVariables' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component _Int must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component _Float must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _String must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},{"desc":"147","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},"Update the dependencies array to be: [InputBoxs, props]",{"range":"154","text":"155"},{"range":"156","text":"155"},"Update the dependencies array to be: [Data, props]",{"range":"157","text":"158"},{"range":"159","text":"158"},{"range":"160","text":"158"},"Update the dependencies array to be: [Variables, props]",{"range":"161","text":"162"},{"range":"163","text":"162"},[665,667],"[InputBoxs, props]",[738,749],[372,374],"[Data, props]",[438,444],[591,597],[510,512],"[Variables, props]",[583,594]]