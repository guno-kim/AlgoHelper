[{"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\index.js":"1","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reportWebVitals.js":"2","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\App.js":"3","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemList\\ProblemList.js":"4","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\LandingPage.js":"5","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Header\\Header.js":"6","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\index.js":"7","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\index.js":"8","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\index.js":"9","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Int.js":"10","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Float.js":"11","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\VariableContainer.js":"12","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_String.js":"13","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputFormat\\InputFormat.js":"14","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlocks.js":"15","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlock.js":"16","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\CodeBox\\CodeBox.js":"17","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Test\\index.js":"18"},{"size":478,"mtime":1609749954541,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":975,"mtime":1611652815200,"results":"22","hashOfConfig":"20"},{"size":1563,"mtime":1610655747903,"results":"23","hashOfConfig":"20"},{"size":1194,"mtime":1610714685332,"results":"24","hashOfConfig":"20"},{"size":1873,"mtime":1610734755783,"results":"25","hashOfConfig":"20"},{"size":4403,"mtime":1611635419582,"results":"26","hashOfConfig":"20"},{"size":1646,"mtime":1611654251707,"results":"27","hashOfConfig":"20"},{"size":5728,"mtime":1612106595554,"results":"28","hashOfConfig":"20"},{"size":1957,"mtime":1611004891313,"results":"29","hashOfConfig":"20"},{"size":1920,"mtime":1609843279575,"results":"30","hashOfConfig":"20"},{"size":3932,"mtime":1611005546982,"results":"31","hashOfConfig":"20"},{"size":2135,"mtime":1609836810607,"results":"32","hashOfConfig":"20"},{"size":812,"mtime":1610736237171,"results":"33","hashOfConfig":"20"},{"size":1904,"mtime":1611005722385,"results":"34","hashOfConfig":"20"},{"size":3447,"mtime":1611005695782,"results":"35","hashOfConfig":"20"},{"size":1201,"mtime":1611949822400,"results":"36","hashOfConfig":"20"},{"size":6528,"mtime":1612126100237,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1o6rytm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\index.js",[],["83","84"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reportWebVitals.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\App.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemList\\ProblemList.js",["85","86","87"],"import React,{useState,useEffect} from 'react'\r\nimport { List, Typography, Divider } from 'antd';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\nfunction ProblemList(props) {\r\n\r\n    const [Problems, setProblems] = useState([])\r\n    const [Search, setSearch] = useState(\"\")\r\n    useEffect(() => {\r\n        //console.log(Search)\r\n    }, [Search])\r\n    // useEffect(() => {\r\n    //     getProblemList()\r\n    // }, [])\r\n\r\n    const handleSearch=(e)=>{\r\n        setSearch(e.target.value)\r\n    }\r\n    const getProblemList= async (e)=>{\r\n        e.preventDefault()\r\n        const request=await axios.get('/problem/getList',{\r\n            params:{\r\n                search:Search\r\n            }\r\n        })\r\n        setProblems(request.data)\r\n        console.log(Problems)\r\n    }\r\n    const problemName=Problems[0]&&Problems.map((ele)=>{\r\n        return <a href={`problem/${ele._id}`}>[ {ele.id} ]  {ele.title}</a>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n             <List\r\n                header={<form><input value={Search} onChange={handleSearch}/><button onClick={getProblemList}>검색</button></form>}\r\n                footer={<div>Footer</div>}\r\n                bordered\r\n                dataSource={problemName}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                     {item}\r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <button onClick={()=>{props.history.push('/problem/create')}}>문제 작성</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProblemList\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\LandingPage.js",["88","89","90"],"import React,{useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport{ Button,Form,Input,Checkbox} from 'antd'\r\n\r\nfunction LandingPage(props) {\r\n    useEffect(() => {\r\n        const body={message:\"hihi\"}\r\n        axios.post('/',body)\r\n            .then((res)=>{\r\n                console.log(res);\r\n                console.log(res.data);\r\n            })\r\n    }, [])\r\n\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n      };\r\n      const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 },\r\n      };\r\n      \r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"basic\"\r\n                >\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\index.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\index.js",["91","92"],"import React,{useEffect,useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport ProblemSetting from '../../commons/ProblemSetting/index';\r\nimport {Button} from 'antd'\r\nimport { useHistory } from 'react-router-dom'\r\nfunction Problem(props) {\r\n\r\n    \r\n    const problem_Id=props.match.params.problem_Id\r\n    const [Setting, setSetting] = useState({})\r\n    useEffect(async () => {\r\n        const request=await axios.get('/problem',{\r\n            params:{\r\n                _id:problem_Id\r\n            }\r\n        })\r\n        setSetting(request.data)\r\n    }, [])\r\n\r\n   const history=useHistory()\r\n    \r\n\r\n    const getChildState=(state)=>{\r\n        setSetting(state)\r\n    }\r\n    return (\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n            <Wrapper>\r\n                <h2>[{Setting.id}] {Setting.title}</h2>\r\n                {Setting.variables&&\r\n                    <ProblemSetting setting={Setting} sendState={getChildState}/>\r\n                }\r\n\r\n                <button onClick={()=>{\r\n                    console.log(Setting)\r\n                    }}>Setting</button>\r\n                <Button onClick={()=>{\r\n                    history.push({\r\n                        pathname:`/problem/${problem_Id}/test`,\r\n                        state:{setting:Setting}\r\n                })\r\n                }}>테스트</Button>\r\n            </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\ndisplay:flex ;\r\nflex-direction: column;\r\nalign-items: center;\r\ntext-align: center;\r\nwidth: 60%;\r\nmin-width:1000px;\r\nbackground-color: RGB(250, 250, 250);\r\n`\r\n\r\nexport default Problem\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\index.js",["93","94","95","96","97","98"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Int.js",["99"],"import React,{useState,useEffect} from 'react'\r\nimport { Input,Descriptions,Checkbox,InputNumber } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nfunction _Int(props) {\r\n\r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e})\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e})\r\n    }\r\n    const handleFix=(e)=>{\r\n        console.log(Data)\r\n        console.log(props.data)\r\n        setData({...Data,fix:e.target.checked})\r\n    }\r\n    useEffect(() => {\r\n        props.changeVariable(Data)\r\n    }, [Data])\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    },[props.data])\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 8, sm: 16, md: 24}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                Int\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소값\" style={{width:'20%',textAlign:'center'}}>\r\n                <InputNumber value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대값\" style={{width:'20%',textAlign:'center'}}>\r\n                <InputNumber value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _Int\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Float.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\VariableContainer.js",["100","101","102","103","104","105"],"import React,{useState,useEffect} from 'react'\r\nimport _Int from './_Int'\r\nimport _Float from './_Float'\r\nimport _String from './_String'\r\nimport {Button} from 'antd'\r\n\r\nfunction VariableContainer(props) {\r\n    const [Variables, setVariables] = useState(props.default)\r\n    const [VariableIndex, setVariableIndex] = useState(1)\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [Variables])\r\n\r\n\r\n    const addInt=()=>{\r\n        let temp=[...Variables,{ type:'int',name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addFloat=()=>{\r\n        let temp=[...Variables,{ type:'float', name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addString=()=>{\r\n        let temp=[...Variables,{ type:'string',name:String.fromCharCode(97+VariableIndex),min:1,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n\r\n    const changeVariable=(index)=>{\r\n        return(\r\n            (changedState)=>{\r\n            let temp=Variables\r\n            temp[index]=changedState\r\n            setVariables(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteVariable= (index)=>{\r\n        let temp=[...Variables]\r\n        temp.splice(index,1)\r\n        setVariables(temp)\r\n    }\r\n    // const printVariables=()=>{\r\n    //     setVariables([{type:'int',name:'asd',min:0,max:5,fix:true},{type:'int',name:'asd',min:0,max:5,fix:true}])\r\n    //     console.log(Variables);\r\n    // }\r\n\r\n\r\n\r\n    const renderVariables=Variables.map((variable,index)=>{\r\n        switch (variable.type) {\r\n            case 'int':\r\n                return(\r\n                    <div key={index} style={{display:'flex',justifyContent:'center',alignItems:'center',marginTop:'10px',width:'1000px'}}>\r\n                        <_Int data={variable} style={{width:'1200px'}} changeVariable={changeVariable(index)}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )\r\n            case 'float':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                        <_Float data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )   \r\n            case 'string':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center'}}>\r\n                        <_String data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                ) \r\n            default:\r\n                return;\r\n        }\r\n    })\r\n    return (\r\n        <div style={{display:'flex',flexDirection:'column',alignItems:'center',width:'100%'}}>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                <Button style={{margin:'20px'}}  onClick={addInt}>Int</Button>\r\n                <Button style={{margin:'20px'}} disabled={true} onClick={addFloat}>Float</Button>\r\n                <Button style={{margin:'20px'}} disabled={true} onClick={addString}>String</Button>\r\n            </div>\r\n            <div style={{ marginBottom: 16,display:'flex',flexDirection:'column',alignItems:'center',width:'100%' }}>\r\n                {renderVariables}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VariableContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_String.js",["106"],"import React,{useState} from 'react'\r\nimport { Input, Select,Descriptions,Checkbox } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction _String(props) {\r\n \r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n        props.changeVariable({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleFix=(e)=>{\r\n        setData({...Data,fix:e.target.checked})\r\n        props.changeVariable(Data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 5, sm: 5, md: 5}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                String\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"구성요소\" style={{width:'100%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _String\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputFormat\\InputFormat.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlocks.js",["107","108","109"],"import React,{useState,useEffect} from 'react'\r\nimport InputBlock from './InputBlock'\r\nimport {Button} from 'antd'\r\n\r\nfunction InputBlockContainer(props) {\r\n    const makeEmptyArray=()=>{\r\n        let result=[]\r\n        for(let j=0;j<10;j++){\r\n            let temp=[]\r\n            for(let i=0;i<10;i++){\r\n                temp.push(\"\")\r\n            }   \r\n            result.push(temp)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const [InputBlocks, setInputBlocks] = useState(props.default)\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBlocks)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBlocks)\r\n    }, [InputBlocks])\r\n\r\n    const changeInputBoxs=(index)=>{\r\n        return(\r\n            (box)=>{\r\n                let temp=InputBlocks\r\n                temp[index]=box\r\n                setInputBlocks(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteInputBox=(index)=>{\r\n        let temp=[...InputBlocks]\r\n        temp.splice(index,1)\r\n        setInputBlocks(temp)\r\n    }\r\n\r\n\r\n    const renderBoxs=InputBlocks.map((item,index)=>{\r\n        if(!item.inputs){\r\n            return\r\n        }\r\n        return(\r\n            <div key={index}  style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                <InputBlock data={item} sendState={changeInputBoxs(index)}/>\r\n                <Button onClick={()=>deleteInputBox(index)} type=\"primary\" style={{marginLeft:'20px'}} danger>삭제</Button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const addInputBlocks=()=>{\r\n        let temp=[...InputBlocks,{inputs:makeEmptyArray(),width:1,height:1,horizonRep:1,verticalRep:1}]\r\n        setInputBlocks(temp)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            {renderBoxs}\r\n            <Button onClick={addInputBlocks} style={{margin:'5px'}}>추가</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBlockContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlock.js",["110","111"],"import React,{useState,useEffect} from 'react'\r\nimport {Input} from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nfunction InputBlock(props) {\r\n    const [Data, setData] = useState(props.data)\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [])\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [Data])\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    }, [props.data])\r\n    const handleWidth=(e)=>{\r\n        setData({...Data,width:e.target.value})\r\n    }\r\n    const handleHeight=(e)=>{\r\n        setData({...Data,height:e.target.value})\r\n    }\r\n    const handleHorizonRep=(e)=>{\r\n        setData({...Data,horizonRep:e.target.value})\r\n    }\r\n    const handelVerticalRep=(e)=>{\r\n        setData({...Data,verticalRep:e.target.value})\r\n    }\r\n    const handleInputs=(y,x,e)=>{\r\n        let temp=Data.inputs\r\n        temp[y][x]=e.target.value\r\n        setData({...Data,inputs:temp})\r\n    }\r\n\r\n\r\n    const makeBox=(width,height)=>{\r\n        \r\n        let box=[]\r\n        for(let y=0;y<height;y++){\r\n            let row=[]\r\n            for(let x=0;x<width;x++){\r\n                row.push(<Input key={x} value={Data.inputs[y][x]} onChange={(e)=>handleInputs(y,x,e)} style={{width:'50px',height:'30px',margin:'5px'}}/>)\r\n            }\r\n            box.push(row)\r\n        }\r\n        return(\r\n            <div id=\"box\" className='flex-column' style={{width:'400px'}}>\r\n                {\r\n                    box.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} style={{display:'flex'}}>\r\n                                {item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Wrapper key={Data.index} className='flex-row' style={{backgroundColor:'RGB(220, 220, 220)', padding:'20px'}}>\r\n            <div style={{background:'RGB(250, 250, 250', borderRadius:'5px'}}>\r\n                {Data.inputs[0]&& makeBox(Data.width,Data.height)}\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>가로 : </div><Input value={Data.width} onChange={handleWidth} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>세로 : </div><Input value={Data.height} onChange={handleHeight} style={{width:'50px'}}/></div>\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 가로 반복 : </div><Input value={Data.horizonRep} onChange={handleHorizonRep} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 세로 반복 : </div><Input value={Data.verticalRep} onChange={handelVerticalRep} style={{width:'50px'}}/></div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .flex-row{\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .flex-column{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nexport default InputBlock\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\CodeBox\\CodeBox.js",["112"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Test\\index.js",["113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":2,"column":16,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"122","line":2,"column":28,"nodeType":"120","messageId":"121","endLine":2,"endColumn":35},{"ruleId":"118","severity":1,"message":"123","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"124","line":3,"column":27,"nodeType":"120","messageId":"121","endLine":3,"endColumn":35},{"ruleId":"118","severity":1,"message":"125","line":16,"column":11,"nodeType":"120","messageId":"121","endLine":16,"endColumn":17},{"ruleId":"118","severity":1,"message":"126","line":20,"column":13,"nodeType":"120","messageId":"121","endLine":20,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":12,"column":15,"nodeType":"129","endLine":19,"endColumn":6},{"ruleId":"127","severity":1,"message":"130","line":19,"column":8,"nodeType":"131","endLine":19,"endColumn":10,"suggestions":"132"},{"ruleId":"118","severity":1,"message":"133","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":12},{"ruleId":"118","severity":1,"message":"134","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":14},{"ruleId":"118","severity":1,"message":"135","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":15},{"ruleId":"127","severity":1,"message":"136","line":23,"column":8,"nodeType":"131","endLine":23,"endColumn":17,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":40,"column":30,"nodeType":"140","messageId":"141","endLine":40,"endColumn":32},{"ruleId":"138","severity":1,"message":"139","line":42,"column":36,"nodeType":"140","messageId":"141","endLine":42,"endColumn":38},{"ruleId":"127","severity":1,"message":"136","line":23,"column":8,"nodeType":"131","endLine":23,"endColumn":14,"suggestions":"142"},{"ruleId":"127","severity":1,"message":"143","line":12,"column":8,"nodeType":"131","endLine":12,"endColumn":10,"suggestions":"144"},{"ruleId":"127","severity":1,"message":"136","line":16,"column":8,"nodeType":"131","endLine":16,"endColumn":19,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":62,"column":25,"nodeType":"148","endLine":62,"endColumn":112},{"ruleId":"146","severity":1,"message":"149","line":69,"column":25,"nodeType":"148","endLine":69,"endColumn":82},{"ruleId":"146","severity":1,"message":"150","line":76,"column":25,"nodeType":"148","endLine":76,"endColumn":83},{"ruleId":"151","severity":1,"message":"152","line":81,"column":17,"nodeType":"153","messageId":"154","endLine":81,"endColumn":24},{"ruleId":"118","severity":1,"message":"155","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"127","severity":1,"message":"156","line":22,"column":8,"nodeType":"131","endLine":22,"endColumn":10,"suggestions":"157"},{"ruleId":"127","severity":1,"message":"136","line":26,"column":8,"nodeType":"131","endLine":26,"endColumn":21,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"152","line":46,"column":13,"nodeType":"153","messageId":"154","endLine":46,"endColumn":19},{"ruleId":"127","severity":1,"message":"159","line":9,"column":8,"nodeType":"131","endLine":9,"endColumn":10,"suggestions":"160"},{"ruleId":"127","severity":1,"message":"136","line":12,"column":8,"nodeType":"131","endLine":12,"endColumn":14,"suggestions":"161"},{"ruleId":"127","severity":1,"message":"136","line":14,"column":8,"nodeType":"131","endLine":14,"endColumn":14,"suggestions":"162"},{"ruleId":"118","severity":1,"message":"163","line":5,"column":29,"nodeType":"120","messageId":"121","endLine":5,"endColumn":35},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'styled' is defined but never used.","'Checkbox' is defined but never used.","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'problem_Id'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'_Int' is defined but never used.","'_Float' is defined but never used.","'_String' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["167"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["168"],"React Hook useEffect has missing dependencies: 'Variables' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["169"],["170"],"react/jsx-pascal-case","Imported JSX component _Int must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component _Float must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _String must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'InputBlocks' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["171"],["172"],"React Hook useEffect has missing dependencies: 'Data' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["173"],["174"],["175"],"'Result' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"185","fix":"186"},{"desc":"185","fix":"187"},{"desc":"180","fix":"188"},{"desc":"180","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [problem_Id]",{"range":"192","text":"193"},"Update the dependencies array to be: [Setting, props]",{"range":"194","text":"195"},"Update the dependencies array to be: [Data, props]",{"range":"196","text":"197"},"Update the dependencies array to be: [Variables, props]",{"range":"198","text":"199"},{"range":"200","text":"199"},"Update the dependencies array to be: [InputBlocks, props]",{"range":"201","text":"202"},{"range":"203","text":"202"},{"range":"204","text":"197"},{"range":"205","text":"197"},"Update the dependencies array to be: [Code, props]",{"range":"206","text":"207"},[595,597],"[problem_Id]",[809,818],"[Setting, props]",[651,657],"[Data, props]",[395,397],"[Variables, props]",[468,479],[565,567],"[InputBlocks, props]",[640,653],[259,261],[325,331],[404,410],"[Code, props]"]