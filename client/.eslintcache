[{"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\index.js":"1","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\reportWebVitals.js":"2","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\App.js":"3","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\LandingPage\\LandingPage.js":"4","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\GenerateData.js":"5","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Variable\\_Float.js":"6","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Variable\\_Int.js":"7","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Variable\\_String.js":"8","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Variable\\VariableContainer.js":"9","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Input\\InputBox.js":"10","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Input\\InputContainer.js":"11"},{"size":478,"mtime":1609749954541,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":456,"mtime":1609789419064,"results":"15","hashOfConfig":"13"},{"size":534,"mtime":1609789503191,"results":"16","hashOfConfig":"13"},{"size":1888,"mtime":1609924435658,"results":"17","hashOfConfig":"13"},{"size":1920,"mtime":1609843279575,"results":"18","hashOfConfig":"13"},{"size":1935,"mtime":1609912927747,"results":"19","hashOfConfig":"13"},{"size":2135,"mtime":1609836810607,"results":"20","hashOfConfig":"13"},{"size":4090,"mtime":1609923344447,"results":"21","hashOfConfig":"13"},{"size":3020,"mtime":1609918880661,"results":"22","hashOfConfig":"13"},{"size":1905,"mtime":1609921240713,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1inlq3x",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\index.js",[],["51","52"],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\reportWebVitals.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\App.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\LandingPage\\LandingPage.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\GenerateData.js",["53","54","55","56","57","58","59","60"],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Variable\\_Float.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Variable\\_Int.js",[],"C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Variable\\_String.js",["61"],"import React,{useState} from 'react'\r\nimport { Input, Select,Descriptions,Checkbox } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction _String(props) {\r\n \r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n        props.changeVariable({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleFix=(e)=>{\r\n        setData({...Data,fix:e.target.checked})\r\n        props.changeVariable(Data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 5, sm: 5, md: 5}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                String\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"구성요소\" style={{width:'100%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _String\r\n","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Variable\\VariableContainer.js",["62","63","64","65","66"],"import React,{useState,useEffect} from 'react'\r\nimport _Int from './_Int'\r\nimport _Float from './_Float'\r\nimport _String from './_String'\r\nimport {Button} from 'antd'\r\n\r\nfunction VariableContainer(props) {\r\n    const [VariableIndex, setVariableIndex] = useState(1)\r\n    const [Variables, setVariables] = useState([{index:0, type:'int',name:'a',min:0,max:5,fix:true}])\r\n    const [ReRender, setReRender] = useState(0)\r\n    const reRender=()=>{\r\n        setReRender(ReRender+1)\r\n    }\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [])\r\n    const addInt=()=>{\r\n        let temp=[...Variables,{index:VariableIndex, type:'int',name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        props.sendState(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addFloat=()=>{\r\n        let temp=[...Variables,{index:VariableIndex, type:'float', name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        props.sendState(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addString=()=>{\r\n        let temp=[...Variables,{index:VariableIndex, type:'string',name:String.fromCharCode(97+VariableIndex),min:1,max:5,fix:true}]\r\n        setVariables(temp)\r\n        props.sendState(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n\r\n    const changeVariable=(changedState)=>{\r\n        let temp=Variables\r\n        temp[changedState.index]=changedState\r\n        setVariables(temp)\r\n        props.sendState(temp)\r\n    }\r\n    const deleteVariable=(index)=>{\r\n        let temp=Variables\r\n        temp[index]={}\r\n        setVariables(temp)\r\n        props.sendState(temp)\r\n        reRender()\r\n    }\r\n    const printVariables=()=>{\r\n        console.log(Variables);\r\n    }\r\n\r\n    const renderVariables=Variables.map((variable)=>{\r\n        switch (variable.type) {\r\n            case 'int':\r\n                return(\r\n                    <div key={variable.index} style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                        <_Int data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(variable.index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )\r\n            case 'float':\r\n                return(\r\n                    <div key={variable.index} style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                        <_Float data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(variable.index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )   \r\n            case 'string':\r\n                return(\r\n                    <div key={variable.index} style={{display:'flex',alignItems:'center'}}>\r\n                        <_String data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(variable.index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                ) \r\n            default:\r\n                return;\r\n        }\r\n    })\r\n    return (\r\n        <div style={{width:'50%'}}>\r\n                    <div style={{ marginBottom: 16 }}>\r\n                        {renderVariables}\r\n                    </div>\r\n                    <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                        <h3>변수 추가</h3>\r\n                        <Button style={{margin:'20px'}} type=\"primary\" onClick={addInt}>Int</Button>\r\n                        <Button style={{margin:'20px'}} type=\"primary\" onClick={addFloat}>Float</Button>\r\n                        <Button style={{margin:'20px'}} type=\"primary\" onClick={addString}>String</Button>\r\n                        <Button style={{margin:'20px'}} type=\"primary\" onClick={printVariables}>Print</Button>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default VariableContainer\r\n","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Input\\InputBox.js",["67"],"import React,{useState,useEffect} from 'react'\r\nimport {Input} from 'antd'\r\nimport '../../../../css/common.css'\r\n\r\nfunction InputBox(props) {\r\n    const [Data, setData] = useState(props.data)\r\n    const [ReRender, setReRender] = useState(0)\r\n    const reRender=()=>{\r\n        setReRender(ReRender+1)\r\n    }\r\n\r\n    const handleWidth=(e)=>{\r\n        setData({...Data,width:e.target.value})\r\n        props.sendState({...Data,width:e.target.value})\r\n    }\r\n    const handleHeight=(e)=>{\r\n        setData({...Data,height:e.target.value})\r\n        props.sendState({...Data,height:e.target.value})\r\n    }\r\n    const handleRowRep=(e)=>{\r\n        setData({...Data,rowRep:e.target.value})\r\n        props.sendState({...Data,rowRep:e.target.value})\r\n    }\r\n    const handelColRep=(e)=>{\r\n        setData({...Data,colRep:e.target.value})\r\n        props.sendState({...Data,colRep:e.target.value})\r\n    }\r\n    const handleInputs=(y,x,e)=>{\r\n        let temp=Data.inputs\r\n        temp[y][x]=e.target.value\r\n        setData({...Data,inputs:temp})\r\n        props.sendState({...Data,inputs:temp})\r\n        reRender()\r\n    }\r\n\r\n\r\n    const makeBox=(width,height)=>{\r\n        \r\n        let box=[]\r\n        for(let y=0;y<height;y++){\r\n            let row=[]\r\n            for(let x=0;x<width;x++){\r\n                row.push(<Input value={Data.inputs[y][x]} onChange={(e)=>handleInputs(y,x,e)} style={{width:'50px',height:'30px',margin:'5px'}}/>)\r\n            }\r\n            box.push(row)\r\n        }\r\n        return(\r\n            <div id=\"box\" className='flex-column' style={{width:'500px'}}>\r\n                {\r\n                    box.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} style={{display:'flex'}}>\r\n                                {item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className='flex-row' style={{backgroundColor:'lightgray'}}>\r\n            {Data.inputs[0]&& makeBox(Data.width,Data.height)}\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>가로 : </div><Input value={Data.width} onChange={handleWidth} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>세로 : </div><Input value={Data.height} onChange={handleHeight} style={{width:'50px'}}/></div>\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 행 반복 : </div><Input value={Data.rowRep} onChange={handleRowRep} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 열 반복 : </div><Input value={Data.colRep} onChange={handelColRep} style={{width:'50px'}}/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBox\r\n","C:\\Users\\김건오\\OneDrive\\바탕 화면\\AlgoHelper\\client\\src\\components\\GenerateData\\sections\\Input\\InputContainer.js",["68"],"import React,{useState} from 'react'\r\nimport InputBox from './InputBox'\r\nimport {Button} from 'antd'\r\n\r\nfunction InputContainer() {\r\n    const makeEmptyArray=()=>{\r\n        let result=[]\r\n        for(let j=0;j<10;j++){\r\n            let temp=[]\r\n            for(let i=0;i<10;i++){\r\n                temp.push(\"\")\r\n            }   \r\n            result.push(temp)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const [InputBoxs, setInputBoxs] = useState([{index:0,inputs:makeEmptyArray(),width:2,height:1,rowRep:1,colRep:1}])\r\n    const [Index, setIndex] = useState(1)\r\n    const [ReRender, setReRender] = useState(0)\r\n    const reRender=()=>{\r\n        setReRender(ReRender+1)\r\n    }\r\n\r\n    const changeInputBoxs=(box)=>{\r\n        let temp=InputBoxs\r\n        temp[box.index]=box\r\n        setInputBoxs(temp)\r\n    }\r\n    const deleteInputBox=(index)=>{\r\n        console.log(\"delete\",index);\r\n        let temp=InputBoxs\r\n        temp[index]={}\r\n        setInputBoxs(temp)\r\n        reRender()\r\n    }\r\n    const renderBoxs=InputBoxs.map((item,index)=>{\r\n        if(!item.inputs){\r\n            return\r\n        }\r\n        return(\r\n            <div style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                <InputBox data={item} key={index} sendState={changeInputBoxs}/>\r\n                <Button onClick={()=>deleteInputBox(index)}>삭제</Button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const addInputBox=()=>{\r\n        let temp=[...InputBoxs,{index:Index,inputs:makeEmptyArray(),width:2,height:1,rowRep:1,colRep:1}]\r\n        setInputBoxs(temp)\r\n        setIndex(Index+1)\r\n    }\r\n\r\n    const printInput=()=>{\r\n        console.log(InputBoxs);\r\n    }\r\n    return (\r\n        <div>\r\n            {renderBoxs}\r\n            <Button onClick={addInputBox}>추가</Button>\r\n            <button onClick={printInput}>Print inputs</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputContainer\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":24,"nodeType":"75","messageId":"76","endLine":1,"endColumn":33},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"78","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":15},{"ruleId":"73","severity":1,"message":"80","line":12,"column":12,"nodeType":"75","messageId":"76","endLine":12,"endColumn":21},{"ruleId":"73","severity":1,"message":"81","line":12,"column":23,"nodeType":"75","messageId":"76","endLine":12,"endColumn":35},{"ruleId":"73","severity":1,"message":"82","line":13,"column":12,"nodeType":"75","messageId":"76","endLine":13,"endColumn":22},{"ruleId":"73","severity":1,"message":"83","line":13,"column":24,"nodeType":"75","messageId":"76","endLine":13,"endColumn":37},{"ruleId":"73","severity":1,"message":"84","line":2,"column":17,"nodeType":"75","messageId":"76","endLine":2,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":16,"column":8,"nodeType":"87","endLine":16,"endColumn":10,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":58,"column":25,"nodeType":"91","endLine":58,"endColumn":80},{"ruleId":"89","severity":1,"message":"92","line":65,"column":25,"nodeType":"91","endLine":65,"endColumn":82},{"ruleId":"89","severity":1,"message":"93","line":72,"column":25,"nodeType":"91","endLine":72,"endColumn":83},{"ruleId":"94","severity":1,"message":"95","line":77,"column":17,"nodeType":"96","messageId":"97","endLine":77,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":1,"column":24,"nodeType":"75","messageId":"76","endLine":1,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":39,"column":13,"nodeType":"96","messageId":"97","endLine":39,"endColumn":19},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'_Int' is defined but never used.","'_Float' is defined but never used.","'_String' is defined but never used.","'InputBoxs' is assigned a value but never used.","'setInputBoxs' is assigned a value but never used.","'InputIndex' is assigned a value but never used.","'setInputIndex' is assigned a value but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Variables' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["100"],"react/jsx-pascal-case","Imported JSX component _Int must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component _Float must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _String must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [Variables, props]",{"range":"103","text":"104"},[550,552],"[Variables, props]"]