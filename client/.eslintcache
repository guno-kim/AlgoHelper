[{"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\index.js":"1","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reportWebVitals.js":"2","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\App.js":"3","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemList\\ProblemList.js":"4","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\LandingPage.js":"5","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Header\\Header.js":"6","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\index.js":"7","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\index.js":"8","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\index.js":"9","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Int.js":"10","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Float.js":"11","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\VariableContainer.js":"12","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_String.js":"13","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputFormat\\InputFormat.js":"14","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlocks.js":"15","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlock.js":"16","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\CodeBox\\CodeBox.js":"17","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Test\\index.js":"18","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Profile\\index.js":"19","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reducers\\index.js":"20","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\actions\\user_action.js":"21","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\actions\\type.js":"22","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reducers\\user_reducer.js":"23","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Login\\index.js":"24","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\hoc\\Auth.js":"25","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\layout\\Layout.js":"26","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Layout\\Layout.js":"27","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\Variable\\VariableContainer.js":"28","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\Variable\\_String.js":"29","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\Variable\\_Int.js":"30","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\InputFormat\\InputFormat.js":"31","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\Variable\\_Float.js":"32","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Layout\\Layout2.js":"33","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\Variable\\VariableContainer.js":"34","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\Variable\\_Int.js":"35","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\Variable\\_Float.js":"36","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\Variable\\_String.js":"37","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\InputBlockContainer\\InputBlocks.js":"38","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\InputBlockContainer\\InputBlock.js":"39","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\InputBlockContainer\\InputBlocks.js":"40","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\InputBlockContainer\\InputBlock.js":"41","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\InputFormat\\InputFormat.js":"42","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\CodeBox\\CodeBox.js":"43"},{"size":929,"mtime":1612473334496,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":1271,"mtime":1614107584833,"results":"47","hashOfConfig":"45"},{"size":2858,"mtime":1614146161689,"results":"48","hashOfConfig":"45"},{"size":558,"mtime":1613718321937,"results":"49","hashOfConfig":"45"},{"size":3259,"mtime":1614114615343,"results":"50","hashOfConfig":"45"},{"size":9119,"mtime":1613719433616,"results":"51","hashOfConfig":"45"},{"size":7579,"mtime":1614148413229,"results":"52","hashOfConfig":"45"},{"size":5545,"mtime":1612905310658,"results":"53","hashOfConfig":"45"},{"size":1957,"mtime":1611004891313,"results":"54","hashOfConfig":"45"},{"size":1920,"mtime":1609843279575,"results":"55","hashOfConfig":"45"},{"size":3932,"mtime":1611005546982,"results":"56","hashOfConfig":"45"},{"size":2135,"mtime":1609836810607,"results":"57","hashOfConfig":"45"},{"size":812,"mtime":1610736237171,"results":"58","hashOfConfig":"45"},{"size":1904,"mtime":1611005722385,"results":"59","hashOfConfig":"45"},{"size":3447,"mtime":1611005695782,"results":"60","hashOfConfig":"45"},{"size":1233,"mtime":1613170647183,"results":"61","hashOfConfig":"45"},{"size":6237,"mtime":1614100442045,"results":"62","hashOfConfig":"45"},{"size":3984,"mtime":1613719700434,"results":"63","hashOfConfig":"45"},{"size":162,"mtime":1612478623116,"results":"64","hashOfConfig":"45"},{"size":657,"mtime":1612801362472,"results":"65","hashOfConfig":"45"},{"size":164,"mtime":1612800418053,"results":"66","hashOfConfig":"45"},{"size":458,"mtime":1612800556805,"results":"67","hashOfConfig":"45"},{"size":2161,"mtime":1612909406506,"results":"68","hashOfConfig":"45"},{"size":599,"mtime":1614107689611,"results":"69","hashOfConfig":"45"},{"size":278,"mtime":1612973496487,"results":"70","hashOfConfig":"45"},{"size":278,"mtime":1612973496487,"results":"71","hashOfConfig":"45"},{"size":3932,"mtime":1612981044310,"results":"72","hashOfConfig":"45"},{"size":2135,"mtime":1612981044314,"results":"73","hashOfConfig":"45"},{"size":2017,"mtime":1613536278616,"results":"74","hashOfConfig":"45"},{"size":812,"mtime":1612981044306,"results":"75","hashOfConfig":"45"},{"size":1920,"mtime":1612981044311,"results":"76","hashOfConfig":"45"},{"size":279,"mtime":1613171092987,"results":"77","hashOfConfig":"45"},{"size":1657,"mtime":1613544490988,"results":"78","hashOfConfig":"45"},{"size":1371,"mtime":1613544458228,"results":"79","hashOfConfig":"45"},{"size":1920,"mtime":1613536325812,"results":"80","hashOfConfig":"45"},{"size":2135,"mtime":1613536325843,"results":"81","hashOfConfig":"45"},{"size":1089,"mtime":1613636235986,"results":"82","hashOfConfig":"45"},{"size":3900,"mtime":1613670834190,"results":"83","hashOfConfig":"45"},{"size":1932,"mtime":1613635360518,"results":"84","hashOfConfig":"45"},{"size":4097,"mtime":1613635360515,"results":"85","hashOfConfig":"45"},{"size":812,"mtime":1613639828285,"results":"86","hashOfConfig":"45"},{"size":1071,"mtime":1614115564570,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1o6rytm",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"90"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\index.js",[],["196","197"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reportWebVitals.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\App.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemList\\ProblemList.js",["198","199","200"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\LandingPage.js",["201","202","203","204","205","206"],"import React,{useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux'\r\nimport {auth} from '../../actions/user_action'\r\nimport styled from 'styled-components'\r\nimport Layout from '../Layout/Layout'\r\nfunction LandingPage(props) {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state)\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <input/>\r\n            </div>\r\n        </Layout>\r\n        \r\n    )\r\n}\r\nexport default LandingPage\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Header\\Header.js",["207"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\index.js",["208","209","210","211","212","213"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport {Button,Input,Form,Modal} from 'antd'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport Layout from '../../Layout/Layout'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport _Int from './sections/Variable/_Int'\r\nimport _Float from './sections/Variable/_Float'\r\nimport _String  from './sections/Variable/_String'\r\nimport VariableContainer from './sections/Variable/VariableContainer';\r\nimport InputContainer from './sections/InputBlockContainer/InputBlocks'\r\nimport InputFormat from './sections/InputFormat/InputFormat'\r\nimport CodeBox from '../../commons/CodeBox/CodeBox'\r\n\r\n\r\nfunction GenerateData(props) {\r\n    const [Format, setFormat] = useState([])\r\n    const [Data, setData] = useState([])\r\n    const [Setting, setSetting] = useState({\r\n        id:'',\r\n        title:'',\r\n        description:'',\r\n        variables:[{type:'int',name:'a',min:0,max:5,fix:true}],\r\n        testCodes:{language:'python',code:'def:'},\r\n        inputBlocks:[{inputs:new Array(10).fill(\"\").map(()=>new Array(10).fill(\"\")),width:1,height:1,horizonRep:1,verticalRep:1}],\r\n    })\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    \r\n\r\n    const textAreaRef = useRef(null);\r\n    \r\n\r\n    //State Handle Function\r\n    const handleVariables=(variables)=>{setSetting({...Setting,variables:variables})}\r\n    const handleInput=(inputBlocks)=>{ setSetting({...Setting,inputBlocks:inputBlocks})}\r\n    const handleTestCodes=(code)=>{setSetting({...Setting,testCodes:code})}\r\n    const handleId=(e)=>{setSetting({...Setting,id:e.target.value})}\r\n    const handleTitle=(e)=>{setSetting({...Setting,title:e.target.value})}\r\n    const handleDesc=(e)=>{setSetting({...Setting,description:e.target.value})}\r\n    const handleSave=()=>{\r\n        axios.post('/problem/create',Setting)\r\n            .then((res)=>{\r\n                    alert(\"저장 성공\")\r\n                    console.log(props)\r\n                    props.history.push('/problem')\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n                alert(\"저장 실패\")\r\n            })\r\n    }\r\n\r\n    const showModal = () => {setIsModalVisible(true)};\r\n    const handleCancel = () => {setIsModalVisible(false);};\r\n    const getExample=()=>{\r\n        let body={\r\n            variables:Setting.variables,\r\n            inputBlocks:Setting.inputBlocks\r\n        }\r\n        axios.post('/data/generate',body)\r\n            .then((res)=>{\r\n                if(res.status==201){\r\n                    alert(res.data.error)\r\n                }else if(res.status==200){\r\n                    setFormat(res.data.format)\r\n                    setData(res.data.input)\r\n                }\r\n            })\r\n    }\r\n    function copyToClipboard(e) {\r\n        textAreaRef.current.select();//텍스트 선택\r\n        document.execCommand('copy');//복사\r\n        e.target.focus();//선택 해제\r\n    };\r\n  \r\n   \r\n    return (\r\n        <Layout>\r\n        <Wrapper>\r\n                <div className='content-container'>\r\n                    <div className='header'>\r\n                        <h1 className='title'>변수 선언</h1>\r\n                        <h3 className='description'>사용할 변수를 선언하세요</h3>\r\n                    </div>\r\n                    <VariableContainer sendState={handleVariables} default={Setting.variables}/>\r\n                </div>\r\n                \r\n                <div className='content-container'>\r\n                    <div className='header'>\r\n                        <h1 className='title'>데이터 만들기</h1>\r\n                        <h3 className='description'>변수와 숫자를 이용해 데이터를 만드세요</h3>\r\n                    </div>\r\n                    <InputContainer sendState={handleInput} default={Setting.inputBlocks}/>\r\n                </div>\r\n\r\n                <div className='content-container'>\r\n                    <div style={{display:'flex'}}>\r\n                        <div style={{margin:'20px'}}>\r\n                            <div style={{fontSize:'2rem', textAlign:'center'}}>입력 형식</div>\r\n                            <InputFormat format={Format}/>\r\n                        </div>\r\n\r\n                        <div style={{margin:'20px'}}>\r\n                            <div style={{display:'flex',alignItems:'center',justifyContent:'center', position:'relative'}}>\r\n                                <div style={{fontSize:'2rem', margin:'0 20px'}}>입력값</div>\r\n                                <button onClick={copyToClipboard} id='copy-button' >복사</button> \r\n                            </div>\r\n                            \r\n                            <textarea \r\n                                ref={textAreaRef}\r\n                                value={Data}\r\n                                id='example'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Button onClick={getExample} size='medium' >생성</Button>\r\n                   \r\n                </div>\r\n                <div className=\"content-container\">\r\n                    <div className='header'>\r\n                        <h1 className='title'>정답 코드 입력</h1>\r\n                        <h3 className='description'>채점에 사용될 정답 코드를 입력하세요</h3>\r\n                    </div>\r\n                    <CodeBox value={Setting.testCodes} sendState={handleTestCodes} style={{height:'400px'}}/>\r\n                </div>\r\n                \r\n\r\n\r\n\r\n\r\n                <Button type=\"primary\"  size='large' onClick={showModal}>저장</Button>\r\n                <Modal title=\"Basic Modal\" visible={isModalVisible} \r\n                    onCancel={handleCancel}\r\n                    footer={[\r\n                      ]}\r\n                >\r\n                    <Form\r\n                        labelCol={{ span: 4}}\r\n                        wrapperCol={ {span: 12}}\r\n                        size='middle'\r\n                        layout=\"vertical\"\r\n                        onFinish={handleSave}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"문제 ID\"\r\n                            name=\"Id\"\r\n                            rules={[{\r\n                                required: true,\r\n                                message: '문제 ID를 입력해주세요'\r\n                            }]}\r\n                        >\r\n                            <Input placeholder=\"ex) 백준 1000\" onChange={handleId} value={Setting.id}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"제목\"\r\n                            name=\"Title\"\r\n                            rules={[{\r\n                                required: true,\r\n                                message: '문제 제목을 입력해주세요'\r\n                            }]}\r\n                        >\r\n                            <Input onChange={handleTitle} value={Setting.title}/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"설명\"\r\n                            wrapperCol={\r\n                                {span:20}\r\n                            }\r\n                        >\r\n                            <Input.TextArea onChange={handleDesc} value={Setting.description} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            wrapperCol={\r\n                                {offset:10}\r\n                            }\r\n                        >\r\n                        <Button key=\"submit\" htmlType=\"submit\" >\r\n                          저장\r\n                        </Button>\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </Modal>\r\n        </Wrapper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n    display:flex ;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    min-width:1000px;\r\n\r\n        \r\n    #example{\r\n        border: 1px solid black;\r\n        width: 400px;\r\n        height: 400px;\r\n        font-size: 20px;\r\n        overflow-y: scroll auto;\r\n        overflow-x: scroll auto;\r\n        border-radius: 10px;\r\n        white-space:nowrap;\r\n    }\r\n    .content-container{\r\n        display:flex ;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 90%;\r\n        border-radius: 10px;\r\n        background-color: white;\r\n        border: 1px solid lightgray;\r\n        margin: 50px;\r\n        padding: 20px;\r\n        .header{\r\n            width: 100%;\r\n            display:flex ;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            margin-bottom:20px;\r\n            .title{\r\n                font-size:2rem;\r\n            }\r\n        }\r\n    }\r\n    #copy-button{\r\n        background:white;\r\n        outline:none;\r\n        border:1px solid gray;\r\n    }\r\n    #copy-button:hover{\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default withRouter(GenerateData)\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\index.js",["214","215","216","217","218","219"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\index.js",["220","221","222","223","224","225"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport {Button} from 'antd'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\n\r\n\r\nimport _Int from './sections/Variable/_Int'\r\nimport _Float from './sections/Variable/_Float'\r\nimport _String  from './sections/Variable/_String'\r\nimport VariableContainer from './sections/Variable/VariableContainer';\r\nimport InputContainer from './sections/InputBlockContainer/InputBlocks'\r\nimport InputFormat from './sections/InputFormat/InputFormat'\r\nimport CodeBox from '../CodeBox/CodeBox'\r\n\r\n\r\nfunction GenerateData(props) {\r\n    const [Format, setFormat] = useState([])\r\n    const [Input, setInput] = useState([])\r\n    \r\n    const [Setting, setSetting] = useState(props.setting)\r\n    \r\n    useEffect(() => {\r\n        props.sendState(Setting)\r\n    }, [Setting])\r\n\r\n    const textAreaRef = useRef(null);\r\n    \r\n\r\n    //State Handle Function\r\n    const handleVariables=(variables)=>{setSetting({...Setting,variables:variables})}\r\n    const handleInput=(inputBlocks)=>{ setSetting({...Setting,inputBlocks:inputBlocks})}\r\n    const handleTestCodes=(code)=>{setSetting({...Setting,testCodes:code})}\r\n\r\n    const getExample=()=>{\r\n        let body={\r\n            variables:Setting.variables,\r\n            inputBlocks:Setting.inputBlocks\r\n        }\r\n        axios.post('/data/generate',body)\r\n            .then((res)=>{\r\n                if(res.status==201){\r\n                    alert(res.data.error)\r\n                }else if(res.status==200){\r\n                    setFormat(res.data.format)\r\n                    setInput(res.data.input)\r\n                }\r\n            })\r\n    }\r\n    function copyToClipboard(e) {\r\n        textAreaRef.current.select();//텍스트 선택\r\n        document.execCommand('copy');//복사\r\n        e.target.focus();//선택 해제\r\n    };\r\n  \r\n   \r\n    return (\r\n        <Wrapper>\r\n            <div >\r\n\r\n                <div className='content-container'>\r\n                    <div className='header'>\r\n                        <h1 className='title'>변수 선언</h1>\r\n                        <h3 className='description'>사용할 변수를 선언하세요</h3>\r\n                    </div>\r\n                    <VariableContainer sendState={handleVariables} default={Setting.variables}/>\r\n                </div>\r\n                \r\n                <div className='content-container'>\r\n                    <div className='header'>\r\n                        <h1 className='title'>데이터 만들기</h1>\r\n                        <h3 className='description'>변수와 숫자를 이용해 데이터를 만드세요</h3>\r\n                    </div>\r\n                    <InputContainer sendState={handleInput} default={Setting.inputBlocks}/>\r\n                </div>\r\n\r\n                <div className='content-container'>\r\n                    <div style={{display:'flex'}}>\r\n                        <div style={{margin:'20px'}}>\r\n                            <div style={{fontSize:'2rem', textAlign:'center'}}>입력 형식</div>\r\n                            <InputFormat format={Format}/>\r\n                        </div>\r\n\r\n                        <div style={{margin:'20px'}}>\r\n                            <div style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\r\n                                <div style={{fontSize:'2rem'}}>입력값</div>\r\n                                <button onClick={copyToClipboard} style={{justifySelf:'right'}}>Copy</button> \r\n                            </div>\r\n                            \r\n                            <textarea \r\n                                ref={textAreaRef}\r\n                                value={Input}\r\n                                id='output'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Button onClick={getExample} size='medium' >생성</Button>\r\n                   \r\n                </div>\r\n                <div className=\"content-container\">\r\n                    <div className='header'>\r\n                        <h1 className='title'>정답 코드 입력</h1>\r\n                        <h3 className='description'>채점에 사용될 정답 코드를 입력하세요</h3>\r\n                    </div>\r\n                    <CodeBox value={Setting.testCodes} sendState={handleTestCodes} style={{height:'400px'}}/>\r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n    display:flex ;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 60%;\r\n\r\n        \r\n        #output{\r\n            border: 1px solid black;\r\n            width: 400px;\r\n            height: 400px;\r\n            font-size: 20px;\r\n            overflow-y: scroll auto;\r\n            overflow-x: scroll auto;\r\n            border-radius: 10px;\r\n            white-space:nowrap;\r\n        }\r\n        .content-container{\r\n            display:flex ;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n            width: 90%;\r\n            border-radius: 10px;\r\n            background-color: white;\r\n            border: 1px solid lightgray;\r\n            margin: 50px;\r\n            padding: 20px;\r\n            .header{\r\n                width: 100%;\r\n                display:flex ;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                margin-bottom:20px;\r\n                .title{\r\n                    font-size:2rem;\r\n                }\r\n            }\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default GenerateData\r\n",["226","227"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Int.js",["228"],"import React,{useState,useEffect} from 'react'\r\nimport { Input,Descriptions,Checkbox,InputNumber } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nfunction _Int(props) {\r\n\r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e})\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e})\r\n    }\r\n    const handleFix=(e)=>{\r\n        console.log(Data)\r\n        console.log(props.data)\r\n        setData({...Data,fix:e.target.checked})\r\n    }\r\n    useEffect(() => {\r\n        props.changeVariable(Data)\r\n    }, [Data])\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    },[props.data])\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 8, sm: 16, md: 24}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                Int\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소값\" style={{width:'20%',textAlign:'center'}}>\r\n                <InputNumber value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대값\" style={{width:'20%',textAlign:'center'}}>\r\n                <InputNumber value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _Int\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_Float.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\VariableContainer.js",["229","230","231","232","233","234"],"import React,{useState,useEffect} from 'react'\r\nimport _Int from './_Int'\r\nimport _Float from './_Float'\r\nimport _String from './_String'\r\nimport {Button} from 'antd'\r\n\r\nfunction VariableContainer(props) {\r\n    const [Variables, setVariables] = useState(props.default)\r\n    const [VariableIndex, setVariableIndex] = useState(1)\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(Variables)\r\n    }, [Variables])\r\n\r\n\r\n    const addInt=()=>{\r\n        let temp=[...Variables,{ type:'int',name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addFloat=()=>{\r\n        let temp=[...Variables,{ type:'float', name:String.fromCharCode(97+VariableIndex),min:0,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n    const addString=()=>{\r\n        let temp=[...Variables,{ type:'string',name:String.fromCharCode(97+VariableIndex),min:1,max:5,fix:true}]\r\n        setVariables(temp)\r\n        setVariableIndex(VariableIndex+1)\r\n    }\r\n\r\n    const changeVariable=(index)=>{\r\n        return(\r\n            (changedState)=>{\r\n            let temp=Variables\r\n            temp[index]=changedState\r\n            setVariables(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteVariable= (index)=>{\r\n        let temp=[...Variables]\r\n        temp.splice(index,1)\r\n        setVariables(temp)\r\n    }\r\n    // const printVariables=()=>{\r\n    //     setVariables([{type:'int',name:'asd',min:0,max:5,fix:true},{type:'int',name:'asd',min:0,max:5,fix:true}])\r\n    //     console.log(Variables);\r\n    // }\r\n\r\n\r\n\r\n    const renderVariables=Variables.map((variable,index)=>{\r\n        switch (variable.type) {\r\n            case 'int':\r\n                return(\r\n                    <div key={index} style={{display:'flex',justifyContent:'center',alignItems:'center',marginTop:'10px',width:'1000px'}}>\r\n                        <_Int data={variable} style={{width:'1200px'}} changeVariable={changeVariable(index)}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )\r\n            case 'float':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                        <_Float data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                )   \r\n            case 'string':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center'}}>\r\n                        <_String data={variable} changeVariable={changeVariable}/>\r\n                        <Button onClick={()=>deleteVariable(index)} style={{marginLeft:'20px'}} type=\"primary\" danger>삭제</Button>\r\n                    </div>\r\n                ) \r\n            default:\r\n                return;\r\n        }\r\n    })\r\n    return (\r\n        <div style={{display:'flex',flexDirection:'column',alignItems:'center',width:'100%'}}>\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\r\n                <Button style={{margin:'20px'}}  onClick={addInt}>Int</Button>\r\n                <Button style={{margin:'20px'}} disabled={true} onClick={addFloat}>Float</Button>\r\n                <Button style={{margin:'20px'}} disabled={true} onClick={addString}>String</Button>\r\n            </div>\r\n            <div style={{ marginBottom: 16,display:'flex',flexDirection:'column',alignItems:'center',width:'100%' }}>\r\n                {renderVariables}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VariableContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\Variable\\_String.js",["235"],"import React,{useState} from 'react'\r\nimport { Input, Select,Descriptions,Checkbox } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction _String(props) {\r\n \r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n        props.changeVariable({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e.target.value})\r\n        props.changeVariable(Data)\r\n    }\r\n    const handleFix=(e)=>{\r\n        setData({...Data,fix:e.target.checked})\r\n        props.changeVariable(Data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 5, sm: 5, md: 5}}>\r\n            <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                String\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최소길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"최대길이\" style={{width:'20%',textAlign:'center'}}>\r\n                <Input value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"구성요소\" style={{width:'100%',textAlign:'center'}}>\r\n                <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n            </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _String\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputFormat\\InputFormat.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlocks.js",["236","237","238"],"import React,{useState,useEffect} from 'react'\r\nimport InputBlock from './InputBlock'\r\nimport {Button} from 'antd'\r\n\r\nfunction InputBlockContainer(props) {\r\n    const makeEmptyArray=()=>{\r\n        let result=[]\r\n        for(let j=0;j<10;j++){\r\n            let temp=[]\r\n            for(let i=0;i<10;i++){\r\n                temp.push(\"\")\r\n            }   \r\n            result.push(temp)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const [InputBlocks, setInputBlocks] = useState(props.default)\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBlocks)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBlocks)\r\n    }, [InputBlocks])\r\n\r\n    const changeInputBoxs=(index)=>{\r\n        return(\r\n            (box)=>{\r\n                let temp=InputBlocks\r\n                temp[index]=box\r\n                setInputBlocks(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteInputBox=(index)=>{\r\n        let temp=[...InputBlocks]\r\n        temp.splice(index,1)\r\n        setInputBlocks(temp)\r\n    }\r\n\r\n\r\n    const renderBoxs=InputBlocks.map((item,index)=>{\r\n        if(!item.inputs){\r\n            return\r\n        }\r\n        return(\r\n            <div key={index}  style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                <InputBlock data={item} sendState={changeInputBoxs(index)}/>\r\n                <Button onClick={()=>deleteInputBox(index)} type=\"primary\" style={{marginLeft:'20px'}} danger>삭제</Button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const addInputBlocks=()=>{\r\n        let temp=[...InputBlocks,{inputs:makeEmptyArray(),width:1,height:1,horizonRep:1,verticalRep:1}]\r\n        setInputBlocks(temp)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            {renderBoxs}\r\n            <Button onClick={addInputBlocks} style={{margin:'5px'}}>추가</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBlockContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\ProblemSetting\\sections\\InputBlockContainer\\InputBlock.js",["239","240"],"import React,{useState,useEffect} from 'react'\r\nimport {Input} from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nfunction InputBlock(props) {\r\n    const [Data, setData] = useState(props.data)\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [])\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [Data])\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    }, [props.data])\r\n    const handleWidth=(e)=>{\r\n        setData({...Data,width:e.target.value})\r\n    }\r\n    const handleHeight=(e)=>{\r\n        setData({...Data,height:e.target.value})\r\n    }\r\n    const handleHorizonRep=(e)=>{\r\n        setData({...Data,horizonRep:e.target.value})\r\n    }\r\n    const handelVerticalRep=(e)=>{\r\n        setData({...Data,verticalRep:e.target.value})\r\n    }\r\n    const handleInputs=(y,x,e)=>{\r\n        let temp=Data.inputs\r\n        temp[y][x]=e.target.value\r\n        setData({...Data,inputs:temp})\r\n    }\r\n\r\n\r\n    const makeBox=(width,height)=>{\r\n        \r\n        let box=[]\r\n        for(let y=0;y<height;y++){\r\n            let row=[]\r\n            for(let x=0;x<width;x++){\r\n                row.push(<Input key={x} value={Data.inputs[y][x]} onChange={(e)=>handleInputs(y,x,e)} style={{width:'50px',height:'30px',margin:'5px'}}/>)\r\n            }\r\n            box.push(row)\r\n        }\r\n        return(\r\n            <div id=\"box\" className='flex-column' style={{width:'400px'}}>\r\n                {\r\n                    box.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} style={{display:'flex'}}>\r\n                                {item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Wrapper key={Data.index} className='flex-row' style={{backgroundColor:'RGB(220, 220, 220)', padding:'20px'}}>\r\n            <div style={{background:'RGB(250, 250, 250', borderRadius:'5px'}}>\r\n                {Data.inputs[0]&& makeBox(Data.width,Data.height)}\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>가로 : </div><Input value={Data.width} onChange={handleWidth} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}>세로 : </div><Input value={Data.height} onChange={handleHeight} style={{width:'50px'}}/></div>\r\n            </div>\r\n            <div className='flex-column' style={{marginLeft:'20px'}}>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 가로 반복 : </div><Input value={Data.horizonRep} onChange={handleHorizonRep} style={{width:'50px'}}/></div>\r\n                <div className='flex-row'><div style={{marginRight:'20px'}}> 세로 반복 : </div><Input value={Data.verticalRep} onChange={handelVerticalRep} style={{width:'50px'}}/></div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .flex-row{\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .flex-column{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nexport default InputBlock\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\commons\\CodeBox\\CodeBox.js",["241"],"import React,{useState,useEffect} from 'react'\r\nimport Editor from \"@monaco-editor/react\";\r\n\r\nfunction CodeBox(props) {\r\n    const [Code, setCode] = useState(props.value)\r\n    const handleCode=(code,e)=>{\r\n        setCode({...Code,code:code})\r\n    }\r\n    const handelLanguage=(e)=>{\r\n        setCode({...Code,language:e.target.value})\r\n    }\r\n    useEffect(() => {\r\n        props.sendState(Code)\r\n    }, [Code])\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <div style={{display:'flex',justifyContent:'center',margin:'10px 0'}}>\r\n                <div style={{marginRight:'10px'}}>언어 : </div>\r\n                <select value = {Code.language} onChange={handelLanguage}>\r\n                    <option value=\"python\">Python</option>\r\n                </select>\r\n            </div>\r\n            \r\n            <div   style={{border:'solid 1px', width:'500px',height:'600px'}}>\r\n                <Editor\r\n                        width='100%'\r\n                        height='100%'\r\n                        language={Code.language}\r\n                        value={Code.code}\r\n                        onChange={handleCode}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodeBox\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Test\\index.js",["242","243","244"],"import React,{useState,useRef,useEffect} from 'react'\r\nimport CodeBox from '../../commons/CodeBox/CodeBox'\r\nimport {useLocation} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport {Button,Table,Modal, Result} from 'antd'\r\nimport axios from 'axios'\r\n\r\nfunction Test() {\r\n    const location=useLocation()\r\n    const setting=location.state.setting\r\n    const textAreaRef = useRef(null);\r\n\r\n    const [Loading, setLoading] = useState(false)\r\n    const [Outputs, setOutputs] = useState([])\r\n    const [ModalVisible, setModalVisible] = useState(false)\r\n    const [ModalIndex, setModalIndex] = useState(0)\r\n    const getOutputs=()=>{\r\n        setLoading(true)\r\n\r\n        axios.get('/problem/test',{\r\n            params:{\r\n                problem:setting\r\n            }\r\n        }).then((res)=>{\r\n            console.log(res.data)\r\n            setLoading(false)\r\n            setOutputs(res.data.outputs)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getOutputs()\r\n    }, []);\r\n    const getData=(outputs)=>{\r\n        return outputs.map((output,idx)=>({\r\n            idx:idx,\r\n            myTime:output.myTime+' ms',\r\n            testTime:output.testTime+' ms',\r\n            result:output.result\r\n        }))\r\n    }\r\n    const showModal=(idx)=>{ \r\n        setModalIndex(idx)   \r\n        setModalVisible(true)\r\n    }\r\n    const columns=[\r\n        {title:\"번호\",dataIndex:'idx',align:'center'},\r\n        {title:'내 시간',dataIndex:'myTime',align:'center'},\r\n        {title:'정답 시간',dataIndex:'testTime',align:'center'},\r\n        {title:'결과',dataIndex:'result',align:'center'},\r\n        {\r\n            title:'데이터 확인',dataIndex:'idx',\r\n            render:(idx)=><Button onClick={()=>{showModal(idx)}}>확인</Button>\r\n        }\r\n    ]\r\n\r\n    function copyToClipboard(e) {\r\n        textAreaRef.current.select();//텍스트 선택\r\n        document.execCommand('copy');//복사\r\n        e.target.focus();//선택 해제\r\n    };\r\n    return (\r\n        <div style={{display:'flex',justifyContent:'center'}}>\r\n            <Wrapper>\r\n\r\n                <div className=\"content-container\">\r\n                    <h1 className='title'>테스트 결과</h1>\r\n                    <h3 className='description'>테스트할 코드를 작성하세요</h3>\r\n                    <Table\r\n                        columns={columns}\r\n                        dataSource={getData(Outputs)}\r\n                        pagination={false}\r\n                        bordered={true}\r\n                        loading={Loading}\r\n                    />\r\n                </div>\r\n                <Modal title={ModalIndex+'번 데이터'} visible={ModalVisible}  onCancel={()=>setModalVisible(false)} width={800}>\r\n                    <div style={{display:'flex',flexDirection:'column',width:'300px'}}>\r\n                        <div style={{display:'flex', justifyContent:'center'}}>\r\n                            <h3>입력값</h3>\r\n                            <button onClick={copyToClipboard} style={{justifySelf:'flex-end'}}>복사</button>\r\n                        </div>\r\n                        <textarea \r\n                            ref={textAreaRef}\r\n                            value={Outputs[ModalIndex]&&Outputs[ModalIndex].input}\r\n                            style={{\r\n                                width:'300px',\r\n                                height:'300px',\r\n                                overflowX:'scroll auto',\r\n                                overflowY:'scroll auto',\r\n                            }}\r\n                        />\r\n                    </div>\r\n                   \r\n                    <div style={{display:'flex'}}>\r\n                        <div style={{display:'flex',flexDirection:'column',width:'300px'}}>\r\n                            <div style={{display:'flex', justifyContent:'center'}}>\r\n                                <h3>내 결과</h3>\r\n                            </div>\r\n                            <textarea \r\n                                value={Outputs[ModalIndex]&&Outputs[ModalIndex].myOutput}\r\n                                style={{\r\n                                    width:'300px',\r\n                                    height:'300px',\r\n                                    overflowX:'scroll auto',\r\n                                    overflowY:'scroll auto',\r\n                                    whiteSpace:'nowrap'\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div style={{display:'flex',flexDirection:'column',width:'300px'}}>\r\n                            <div style={{display:'flex', justifyContent:'center'}}>\r\n                                <h3>정답</h3>\r\n                            </div>\r\n                            <textarea \r\n                                value={Outputs[ModalIndex]&&Outputs[ModalIndex].testOutput}\r\n                                style={{\r\n                                    width:'300px',\r\n                                    height:'300px',\r\n                                    overflowX:'scroll auto',\r\n                                    overflowY:'scroll auto',\r\n                                    whiteSpace:'nowrap'\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div style={{color:'red'}}>{Outputs[ModalIndex]&&Outputs[ModalIndex].error}</div>\r\n                </Modal>\r\n            </Wrapper>\r\n          \r\n        </div>\r\n    )\r\n}\r\nconst Wrapper=styled.div`\r\ndisplay:flex ;\r\nflex-direction: column;\r\nalign-items: center;\r\ntext-align: center;\r\nwidth: 60%;\r\nmin-width:1000px;\r\nbackground-color: RGB(250, 250, 250);\r\n\r\n.content-container{\r\n    display:flex ;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    border: 1px solid lightgray;\r\n    margin: 50px;\r\n    .header{\r\n        width: 100%;\r\n        display:flex ;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-bottom:20px;\r\n        .title{\r\n            font-size:2rem;\r\n        }\r\n    }\r\n  \r\n}  \r\n`\r\nexport default Test\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Profile\\index.js",["245","246","247","248"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport {update} from '../../../actions/user_action'\r\nimport { withRouter } from 'react-router-dom';\r\nimport {List,Divider,Table } from 'antd'\r\nimport styled from 'styled-components'\r\nimport Layout from '../../Layout/Layout'\r\nfunction MyPage() {\r\n    const data=useSelector(state => state.user.data)\r\n    const [Name, setName] = useState(\"\")\r\n    const [Problems, setProblems] = useState([])\r\n    const dispatch = useDispatch();\r\n\r\n    const onNameChange=(e)=>{\r\n        dispatch(update({name:Name}))\r\n    }\r\n    useEffect(() => {\r\n        if(data){\r\n            setName(data.name)\r\n        }\r\n    }, [data])\r\n    useEffect(() => {\r\n        axios.get('/problem/my')\r\n            .then((res)=>{setProblems(res.data)})\r\n    }, [])\r\n\r\n    const handleDelete=(_id)=>{\r\n        axios.post('/problem/delete',{_id:_id})\r\n            .then(()=>{\r\n                axios.get('/problem/my')\r\n                    .then((res)=>{setProblems(res.data)})\r\n            })\r\n            .catch(()=>{\r\n                alert('잠시후 시도해주세요')\r\n            })\r\n    }\r\n    const columns = [\r\n        { title: '제목', dataIndex: 'title', key: 'title',\r\n            render:(text)=><a href={`/problem/${text[1]}`}>{text[0]}</a>,\r\n            align:'center',\r\n\r\n        },\r\n        { title: '작성일', dataIndex: 'date', key: 'date',\r\n            render:text=>{\r\n                return text.substring(0,10)\r\n            },\r\n            align:'center',\r\n            width:'100px',\r\n\r\n        },\r\n        \r\n        { title: '추천', dataIndex: 'like', key: 'like',align:'center',width:'50px',    },\r\n        {\r\n            title: '삭제',\r\n            dataIndex: 'delete',\r\n            key: 'x',\r\n            render: (text) => <button onClick={()=>handleDelete(text)}>삭제</button>\r\n            ,align:'center',\r\n            width:'80px',\r\n\r\n          },\r\n      ];\r\n    const renderProblems=Problems[0]&&Problems.map((ele,index)=>{\r\n        return ({\r\n            key:index,\r\n            delete:ele._id,\r\n            title:[`[ ${ele.id} ] ${ele.title}`,ele._id],\r\n            date:ele.date,\r\n            like:ele.like-ele.dislike\r\n        })\r\n    })\r\n    const tempData=()=>{\r\n        let temp=[]\r\n        for(let i=0;i<95;i++){\r\n            temp.push({\r\n                key:i,\r\n                delete:'asd',\r\n                title:[`sfsdfd${i}`,'asd'],\r\n                date:'2020-12-12',\r\n                like:100-i\r\n            })\r\n        }\r\n        return temp\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            \r\n            <div style={{\r\n                width:'800px',\r\n                height:'700px',\r\n                borderRadius: '10px',\r\n                border:'1px solid lightgray',\r\n                marginTop:'100px',\r\n                display:'flex',\r\n                flexDirection:'column',\r\n                alignItems:'center'\r\n                \r\n            }}>\r\n                <Divider>닉네임</Divider>\r\n                <div style={{display:'flex' ,justifyContent:'center'}}>\r\n                    <input value={Name} onChange={(e)=>{setName(e.target.value)}}></input>\r\n                    <button onClick={onNameChange}>변경</button>\r\n                 </div>\r\n\r\n                <Divider>내 문제</Divider>\r\n                <Table\r\n                    columns={columns}\r\n                    dataSource={renderProblems}\r\n                    size='small'\r\n                    bordered='true'\r\n                    pagination={{\r\n                        position:['none','bottomCenter'], \r\n                        pageSize:10,\r\n                        showSizeChanger:false\r\n                    }}\r\n                    style={{\r\n                        width:'500px'\r\n                    }}\r\n                />\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withRouter(MyPage)\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reducers\\index.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\actions\\user_action.js",["249"],"import {AUTH_USER,LOGIN_USER,LOGOUT_USER,UPDATE_USER} from './type'\r\nimport axios from 'axios'\r\nexport async function auth(){\r\n    const req=await axios.get('/user/auth').then(res=>res.data)\r\n    return{\r\n        type:AUTH_USER,\r\n        auth:req.auth,\r\n        data:req.data\r\n    }\r\n}\r\nexport async function logout(){\r\n    const req=await axios.get('/user/logout').then(res=>res.data)\r\n    return{\r\n        type:LOGOUT_USER,\r\n        success:req.success\r\n    }\r\n}\r\nexport async function update(body){\r\n    const req=await axios.post('/user/profile/update',body).then(res=>res.data)\r\n    return{\r\n        type:UPDATE_USER,\r\n        data:req.data\r\n    }\r\n}\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\actions\\type.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\reducers\\user_reducer.js",["250"],"import{\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    UPDATE_USER\r\n} from '../actions/type'\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case AUTH_USER:\r\n            return {...state,auth:action.auth,data:action.data}\r\n        case LOGOUT_USER:\r\n            return {...state,auth:false,data:{}}\r\n        case UPDATE_USER:\r\n            return {...state, data:action.data}\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Login\\index.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\hoc\\Auth.js",["251","252"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\layout\\Layout.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\Variable\\VariableContainer.js",["253","254","255","256","257","258"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\Variable\\_String.js",["259"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\Variable\\_Int.js",["260"],"import React,{useState,useEffect} from 'react'\r\nimport { Input,Descriptions,Checkbox,InputNumber } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nfunction _Int(props) {\r\n\r\n    const [Data, setData] = useState(props.data)\r\n    const handleName=(e)=>{\r\n        setData({...Data,name:e.target.value})\r\n    }\r\n    const handleMin=(e)=>{\r\n        setData({...Data,min:e})\r\n    }\r\n    const handleMax=(e)=>{\r\n        setData({...Data,max:e})\r\n    }\r\n    const handleFix=(e)=>{\r\n        console.log(Data)\r\n        console.log(props.data)\r\n        setData({...Data,fix:e.target.checked})\r\n    }\r\n    useEffect(() => {\r\n        props.changeVariable(Data)\r\n    }, [Data])\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    },[props.data])\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 8, sm: 16, md: 24}}>\r\n                <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                    Int\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                    <Input value={Data.name} onChange={handleName} style={{textAlign:'center'}}/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"최소값\" style={{width:'20%',textAlign:'center'}}>\r\n                    <InputNumber value={Data.min} onChange={handleMin} style={{textAlign:'center'}}/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"최대값\" style={{width:'20%',textAlign:'center'}}>\r\n                    <InputNumber value={Data.max} onChange={handleMax} style={{textAlign:'center'}}/>\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                    <Checkbox checked={Data.fix} onChange={handleFix}/>\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _Int\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\InputFormat\\InputFormat.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\Variable\\_Float.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\Layout\\Layout2.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\Variable\\VariableContainer.js",["261","262","263","264","265"],"import React,{useState,useEffect} from 'react'\r\nimport _Int from './_Int'\r\nimport _Float from './_Float'\r\nimport _String from './_String'\r\nimport {Button} from 'antd'\r\n\r\nfunction VariableContainer(props) {\r\n    const [Variables, setVariables] = useState([])\r\n    useEffect(() => {\r\n        setVariables(props.variables)\r\n    }, [props.variables])\r\n    const renderVariables=Variables&&Variables.map((variable,index)=>{\r\n        switch (variable.type) {\r\n            case 'int':\r\n                return(\r\n                    <div key={index} style={{display:'flex',justifyContent:'center',alignItems:'center',marginTop:'10px',width:'1000px'}}>\r\n                        <_Int data={variable} style={{width:'1200px'}} />\r\n                    </div>\r\n                )\r\n            case 'float':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center',marginTop:'10px'}}>\r\n                        <_Float data={variable} />\r\n                    </div>\r\n                )   \r\n            case 'string':\r\n                return(\r\n                    <div key={index} style={{display:'flex',alignItems:'center'}}>\r\n                        <_String data={variable} />\r\n                    </div>\r\n                ) \r\n            default:\r\n                return;\r\n        }\r\n    })\r\n    return (\r\n        <div style={{display:'flex',flexDirection:'column',alignItems:'center',width:'100%'}}>\r\n            <div style={{ marginBottom: 16,display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                {renderVariables}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VariableContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\Variable\\_Int.js",["266","267"],"import React,{useState,useEffect} from 'react'\r\nimport { Input,Descriptions,Checkbox,InputNumber } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nfunction _Int(props) {\r\n\r\n    const [Data, setData] = useState(props.data)\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    },[props.data])\r\n    return (\r\n        <div>\r\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={{ xs: 8, sm: 16, md: 24}} style={{width:'500px'}}>\r\n                <Descriptions.Item label=\"자료형\" style={{width:'20%',textAlign:'center'}}>\r\n                    Int\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"변수이름\" style={{width:'20%',textAlign:'center'}}>\r\n                    {Data.name}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"최소값\" style={{width:'20%',textAlign:'center'}}>\r\n                    {Data.min}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"최대값\" style={{width:'20%',textAlign:'center'}}>\r\n                   {Data.max}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"고정\" style={{width:'20%',textAlign:'center'}}>\r\n                    <Checkbox checked={Data.fix} />\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default _Int\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\Variable\\_Float.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\Variable\\_String.js",["268"],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\InputBlockContainer\\InputBlocks.js",["269","270","271"],"import React,{useState,useEffect} from 'react'\r\nimport InputBlock from './InputBlock'\r\nimport {Button} from 'antd'\r\n\r\nfunction InputBlockContainer(props) {\r\n    const makeEmptyArray=()=>{\r\n        let result=[]\r\n        for(let j=0;j<10;j++){\r\n            let temp=[]\r\n            for(let i=0;i<10;i++){\r\n                temp.push(\"\")\r\n            }   \r\n            result.push(temp)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const [InputBlocks, setInputBlocks] = useState(props.default)\r\n    useEffect(() => {\r\n        setInputBlocks(props.default)\r\n    }, [props.default])\r\n\r\n    const renderBoxs=InputBlocks&&InputBlocks.map((item,index)=>{\r\n        if(!item.inputs){\r\n            return\r\n        }\r\n        return(\r\n            <div key={index}  style={{display:'flex',alignItems:'center',marginTop:'10px', width:'100%'}}>\r\n                <InputBlock data={item} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    \r\n    return (\r\n        <div style={{textAlign:'center', width:'100%'}}>\r\n            {renderBoxs}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBlockContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\InputBlockContainer\\InputBlock.js",["272","273","274","275","276","277","278"],"import React,{useState,useEffect} from 'react'\r\nimport {Input, InputNumber} from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nfunction InputBlock(props) {\r\n    const [Data, setData] = useState(props.data)\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    }, [props.data])\r\n    const handleWidth=(e)=>{\r\n        setData({...Data,width:e})\r\n    }\r\n    const handleHeight=(e)=>{\r\n        setData({...Data,height:e})\r\n    }\r\n    const handleHorizonRep=(e)=>{\r\n        setData({...Data,horizonRep:e.target.value})\r\n    }\r\n    const handelVerticalRep=(e)=>{\r\n        setData({...Data,verticalRep:e.target.value})\r\n    }\r\n    const handleInputs=(y,x,e)=>{\r\n        let temp=Data.inputs\r\n        temp[y][x]=e.target.value\r\n        setData({...Data,inputs:temp})\r\n    }\r\n\r\n\r\n    const makeBox=(width,height)=>{\r\n        \r\n        let box=[]\r\n        for(let y=0;y<height;y++){\r\n            let row=[]\r\n            for(let x=0;x<width;x++){\r\n                row.push(<div style={{width:'50px',border:'1px solid lightgray', margin:'10px'}}>{Data.inputs[y][x]}</div>)\r\n            }\r\n            box.push(row)\r\n        }\r\n        return(\r\n            <div id=\"box\" className='flex-column' style={{width:'400px'}}>\r\n                {\r\n                    box.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} style={{display:'flex'}}>\r\n                                {item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Wrapper key={Data.index} >\r\n            <div id='inputbox' style={{background:'white', borderRadius:'5px',overflowX:'scroll',border:'1px solid lightgray',padding:'10px'}}>\r\n                {Data.inputs[0]&& makeBox(Data.width,Data.height)}\r\n            </div>\r\n            <div className='flex-column' style={{width:'300px',padding:'10px'}}>\r\n                <div  className='flex-row'style={{marginBottom:'10px',background:'white',width:'280px',height:'60px',border:'1px solid lightgray'}}>\r\n                    <div style={{fontSize:'18px',marginRight:'10px'}}>크기</div>\r\n                    <div style={{marginRight:'10px', fontSize:'14px'}}>가로 : </div>\r\n\r\n                    <div  style={{width:'50px',marginRight:'10px'}} >{Data.width}</div>\r\n                    <div style={{marginRight:'10px', fontSize:'14px'}}>세로 : </div>\r\n\r\n                    <div  style={{width:'50px',marginRight:'10px'}} >{Data.height}</div>\r\n\r\n                </div>\r\n                <div  className='flex-row' style={{background:'white',width:'280px',height:'60px',border:'1px solid lightgray'}}>\r\n                    <div style={{fontSize:'18px',marginRight:'10px'}}>반복</div>\r\n                    <div style={{marginRight:'10px', fontSize:'14px'}}>가로 : </div>\r\n                    <div  style={{width:'50px',marginRight:'10px'}} >{Data.horizonRep}</div>\r\n\r\n                    <div style={{marginRight:'10px', fontSize:'14px'}}>세로 : </div>\r\n                    <div  style={{width:'50px',marginRight:'10px'}} >{Data.verticalRep}</div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: rgb(236, 247, 253);\r\n\r\n    width:850px;\r\n    padding:0 20px;\r\n    border:1px solid lightgray;\r\n\r\n    .inputDiv{\r\n\r\n    }\r\n\r\n    #inputbox::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    .flex-row{\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .flex-column{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nexport default InputBlock\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\InputBlockContainer\\InputBlocks.js",["279","280","281"],"import React,{useState,useEffect} from 'react'\r\nimport InputBlock from './InputBlock'\r\nimport {Button} from 'antd'\r\n\r\nfunction InputBlockContainer(props) {\r\n    const makeEmptyArray=()=>{\r\n        let result=[]\r\n        for(let j=0;j<10;j++){\r\n            let temp=[]\r\n            for(let i=0;i<10;i++){\r\n                temp.push(\"\")\r\n            }   \r\n            result.push(temp)\r\n        }\r\n        return result\r\n    }\r\n\r\n    const [InputBlocks, setInputBlocks] = useState(props.default)\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBlocks)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.sendState(InputBlocks)\r\n    }, [InputBlocks])\r\n\r\n    const changeInputBoxs=(index)=>{\r\n        return(\r\n            (box)=>{\r\n                let temp=InputBlocks\r\n                temp[index]=box\r\n                setInputBlocks(temp)\r\n            }\r\n        )\r\n    }\r\n    const deleteInputBox=(index)=>{\r\n        let temp=[...InputBlocks]\r\n        temp.splice(index,1)\r\n        setInputBlocks(temp)\r\n    }\r\n\r\n\r\n    const renderBoxs=InputBlocks.map((item,index)=>{\r\n        if(!item.inputs){\r\n            return\r\n        }\r\n        return(\r\n            <div key={index}  style={{display:'flex',alignItems:'center',marginTop:'10px', width:'100%'}}>\r\n                <InputBlock data={item} sendState={changeInputBoxs(index)}/>\r\n                <Button onClick={()=>deleteInputBox(index)} type=\"primary\" style={{marginLeft:'20px'}} danger>삭제</Button>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const addInputBlocks=()=>{\r\n        let temp=[...InputBlocks,{inputs:makeEmptyArray(),width:1,height:1,horizonRep:1,verticalRep:1}]\r\n        setInputBlocks(temp)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div style={{textAlign:'center', width:'100%'}}>\r\n            {renderBoxs}\r\n            <Button onClick={addInputBlocks} style={{margin:'5px'}}>추가</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputBlockContainer\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\ProblemCreate\\sections\\InputBlockContainer\\InputBlock.js",["282","283"],"import React,{useState,useEffect} from 'react'\r\nimport {Input, InputNumber} from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nfunction InputBlock(props) {\r\n    const [Data, setData] = useState(props.data)\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [])\r\n    useEffect(() => {\r\n        props.sendState(Data)\r\n    }, [Data])\r\n    useEffect(() => {\r\n        setData(props.data)\r\n    }, [props.data])\r\n    const handleWidth=(e)=>{\r\n        setData({...Data,width:e})\r\n    }\r\n    const handleHeight=(e)=>{\r\n        setData({...Data,height:e})\r\n    }\r\n    const handleHorizonRep=(e)=>{\r\n        setData({...Data,horizonRep:e.target.value})\r\n    }\r\n    const handelVerticalRep=(e)=>{\r\n        setData({...Data,verticalRep:e.target.value})\r\n    }\r\n    const handleInputs=(y,x,e)=>{\r\n        let temp=Data.inputs\r\n        temp[y][x]=e.target.value\r\n        setData({...Data,inputs:temp})\r\n    }\r\n\r\n\r\n    const makeBox=(width,height)=>{\r\n        \r\n        let box=[]\r\n        for(let y=0;y<height;y++){\r\n            let row=[]\r\n            for(let x=0;x<width;x++){\r\n                row.push(<Input key={x} value={Data.inputs[y][x]} onChange={(e)=>handleInputs(y,x,e)} style={{width:'50px',height:'30px',margin:'5px'}}/>)\r\n            }\r\n            box.push(row)\r\n        }\r\n        return(\r\n            <div id=\"box\" className='flex-column' style={{width:'400px'}}>\r\n                {\r\n                    box.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} style={{display:'flex'}}>\r\n                                {item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Wrapper key={Data.index} >\r\n            <div id='inputbox' style={{background:'RGB(250, 250, 250', borderRadius:'5px',overflowX:'scroll',border:'1px solid lightgray',padding:'10px'}}>\r\n                {Data.inputs[0]&& makeBox(Data.width,Data.height)}\r\n            </div>\r\n            <div className='flex-column' style={{width:'300px',padding:'10px'}}>\r\n                <div  className='flex-row'style={{marginBottom:'10px',background:'white',width:'280px',height:'60px',border:'1px solid lightgray'}}>\r\n                    <div style={{fontSize:'18px',marginRight:'10px'}}>크기</div>\r\n                    <div style={{marginRight:'10px'}}>가로 : </div>\r\n                    <InputNumber value={Data.width} onChange={handleWidth} max={10} min={1} style={{width:'50px',marginRight:'10px'}} />\r\n                    <div style={{marginRight:'10px'}}>세로 : </div>\r\n                    <InputNumber value={Data.height} onChange={handleHeight} max={10} min={1} style={{width:'50px'}}/>\r\n                </div>\r\n                <div  className='flex-row' style={{background:'white',width:'280px',height:'60px',border:'1px solid lightgray'}}>\r\n                    <div style={{fontSize:'18px',marginRight:'10px'}}>반복</div>\r\n                    <div style={{marginRight:'10px'}}>가로 : </div>\r\n                    <Input value={Data.horizonRep} onChange={handleHorizonRep} style={{width:'50px',marginRight:'10px'}}/>\r\n                    <div style={{marginRight:'10px'}}>세로 : </div>\r\n                    <Input value={Data.verticalRep} onChange={handelVerticalRep} style={{width:'50px'}}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper=styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: rgb(236, 247, 253);\r\n\r\n    width:850px;\r\n    padding:0 20px;\r\n    border:1px solid lightgray;\r\n\r\n\r\n    #inputbox::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    .flex-row{\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .flex-column{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nexport default InputBlock\r\n","C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\InputFormat\\InputFormat.js",[],"C:\\Users\\김건오\\Desktop\\AlgoHelper\\client\\src\\components\\pages\\Problem\\sections\\CodeBox\\CodeBox.js",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":14},{"ruleId":"288","severity":1,"message":"292","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":14},{"ruleId":"293","severity":1,"message":"294","line":61,"column":44,"nodeType":"295","messageId":"296","endLine":61,"endColumn":46},{"ruleId":"288","severity":1,"message":"297","line":1,"column":15,"nodeType":"290","messageId":"291","endLine":1,"endColumn":24},{"ruleId":"288","severity":1,"message":"298","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":13},{"ruleId":"288","severity":1,"message":"299","line":5,"column":9,"nodeType":"290","messageId":"291","endLine":5,"endColumn":13},{"ruleId":"288","severity":1,"message":"292","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":14},{"ruleId":"288","severity":1,"message":"300","line":9,"column":11,"nodeType":"290","messageId":"291","endLine":9,"endColumn":19},{"ruleId":"288","severity":1,"message":"301","line":10,"column":11,"nodeType":"290","messageId":"291","endLine":10,"endColumn":15},{"ruleId":"288","severity":1,"message":"298","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":13},{"ruleId":"288","severity":1,"message":"297","line":1,"column":24,"nodeType":"290","messageId":"291","endLine":1,"endColumn":33},{"ruleId":"288","severity":1,"message":"302","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":12},{"ruleId":"288","severity":1,"message":"303","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":14},{"ruleId":"288","severity":1,"message":"304","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":64,"column":30,"nodeType":"295","messageId":"296","endLine":64,"endColumn":32},{"ruleId":"293","severity":1,"message":"294","line":66,"column":36,"nodeType":"295","messageId":"296","endLine":66,"endColumn":38},{"ruleId":"305","severity":1,"message":"306","line":29,"column":15,"nodeType":"307","endLine":36,"endColumn":6},{"ruleId":"305","severity":1,"message":"308","line":36,"column":8,"nodeType":"309","endLine":36,"endColumn":10,"suggestions":"310"},{"ruleId":"293","severity":1,"message":"294","line":58,"column":26,"nodeType":"295","messageId":"296","endLine":58,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":60,"column":32,"nodeType":"295","messageId":"296","endLine":60,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":156,"column":37,"nodeType":"295","messageId":"296","endLine":156,"endColumn":39},{"ruleId":"293","severity":1,"message":"294","line":164,"column":33,"nodeType":"295","messageId":"296","endLine":164,"endColumn":35},{"ruleId":"288","severity":1,"message":"302","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":12},{"ruleId":"288","severity":1,"message":"303","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":14},{"ruleId":"288","severity":1,"message":"304","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":15},{"ruleId":"305","severity":1,"message":"311","line":24,"column":8,"nodeType":"309","endLine":24,"endColumn":17,"suggestions":"312"},{"ruleId":"293","severity":1,"message":"294","line":41,"column":30,"nodeType":"295","messageId":"296","endLine":41,"endColumn":32},{"ruleId":"293","severity":1,"message":"294","line":43,"column":36,"nodeType":"295","messageId":"296","endLine":43,"endColumn":38},{"ruleId":"284","replacedBy":"313"},{"ruleId":"286","replacedBy":"314"},{"ruleId":"305","severity":1,"message":"311","line":23,"column":8,"nodeType":"309","endLine":23,"endColumn":14,"suggestions":"315"},{"ruleId":"305","severity":1,"message":"316","line":12,"column":8,"nodeType":"309","endLine":12,"endColumn":10,"suggestions":"317"},{"ruleId":"305","severity":1,"message":"311","line":16,"column":8,"nodeType":"309","endLine":16,"endColumn":19,"suggestions":"318"},{"ruleId":"319","severity":1,"message":"320","line":62,"column":25,"nodeType":"321","endLine":62,"endColumn":112},{"ruleId":"319","severity":1,"message":"322","line":69,"column":25,"nodeType":"321","endLine":69,"endColumn":82},{"ruleId":"319","severity":1,"message":"323","line":76,"column":25,"nodeType":"321","endLine":76,"endColumn":83},{"ruleId":"324","severity":1,"message":"325","line":81,"column":17,"nodeType":"326","messageId":"327","endLine":81,"endColumn":24},{"ruleId":"288","severity":1,"message":"328","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":23},{"ruleId":"305","severity":1,"message":"329","line":22,"column":8,"nodeType":"309","endLine":22,"endColumn":10,"suggestions":"330"},{"ruleId":"305","severity":1,"message":"311","line":26,"column":8,"nodeType":"309","endLine":26,"endColumn":21,"suggestions":"331"},{"ruleId":"324","severity":1,"message":"325","line":46,"column":13,"nodeType":"326","messageId":"327","endLine":46,"endColumn":19},{"ruleId":"305","severity":1,"message":"332","line":9,"column":8,"nodeType":"309","endLine":9,"endColumn":10,"suggestions":"333"},{"ruleId":"305","severity":1,"message":"311","line":12,"column":8,"nodeType":"309","endLine":12,"endColumn":14,"suggestions":"334"},{"ruleId":"305","severity":1,"message":"311","line":14,"column":8,"nodeType":"309","endLine":14,"endColumn":14,"suggestions":"335"},{"ruleId":"288","severity":1,"message":"336","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":15},{"ruleId":"288","severity":1,"message":"337","line":5,"column":29,"nodeType":"290","messageId":"291","endLine":5,"endColumn":35},{"ruleId":"305","severity":1,"message":"338","line":32,"column":8,"nodeType":"309","endLine":32,"endColumn":10,"suggestions":"339"},{"ruleId":"288","severity":1,"message":"340","line":1,"column":34,"nodeType":"290","messageId":"291","endLine":1,"endColumn":40},{"ruleId":"288","severity":1,"message":"289","line":7,"column":9,"nodeType":"290","messageId":"291","endLine":7,"endColumn":13},{"ruleId":"288","severity":1,"message":"292","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":14},{"ruleId":"288","severity":1,"message":"341","line":74,"column":11,"nodeType":"290","messageId":"291","endLine":74,"endColumn":19},{"ruleId":"288","severity":1,"message":"342","line":1,"column":19,"nodeType":"290","messageId":"291","endLine":1,"endColumn":29},{"ruleId":"343","severity":1,"message":"344","line":6,"column":1,"nodeType":"345","endLine":17,"endColumn":2},{"ruleId":"343","severity":1,"message":"344","line":5,"column":1,"nodeType":"345","endLine":21,"endColumn":2},{"ruleId":"305","severity":1,"message":"346","line":17,"column":12,"nodeType":"309","endLine":17,"endColumn":14,"suggestions":"347"},{"ruleId":"305","severity":1,"message":"316","line":12,"column":8,"nodeType":"309","endLine":12,"endColumn":10,"suggestions":"348"},{"ruleId":"305","severity":1,"message":"311","line":16,"column":8,"nodeType":"309","endLine":16,"endColumn":19,"suggestions":"349"},{"ruleId":"319","severity":1,"message":"320","line":62,"column":25,"nodeType":"321","endLine":62,"endColumn":112},{"ruleId":"319","severity":1,"message":"322","line":69,"column":25,"nodeType":"321","endLine":69,"endColumn":82},{"ruleId":"319","severity":1,"message":"323","line":76,"column":25,"nodeType":"321","endLine":76,"endColumn":83},{"ruleId":"324","severity":1,"message":"325","line":81,"column":17,"nodeType":"326","messageId":"327","endLine":81,"endColumn":24},{"ruleId":"288","severity":1,"message":"328","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":23},{"ruleId":"305","severity":1,"message":"311","line":23,"column":8,"nodeType":"309","endLine":23,"endColumn":14,"suggestions":"350"},{"ruleId":"288","severity":1,"message":"351","line":5,"column":9,"nodeType":"290","messageId":"291","endLine":5,"endColumn":15},{"ruleId":"319","severity":1,"message":"320","line":17,"column":25,"nodeType":"321","endLine":17,"endColumn":74},{"ruleId":"319","severity":1,"message":"322","line":23,"column":25,"nodeType":"321","endLine":23,"endColumn":51},{"ruleId":"319","severity":1,"message":"323","line":29,"column":25,"nodeType":"321","endLine":29,"endColumn":52},{"ruleId":"324","severity":1,"message":"325","line":33,"column":17,"nodeType":"326","messageId":"327","endLine":33,"endColumn":24},{"ruleId":"288","severity":1,"message":"352","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":15},{"ruleId":"288","severity":1,"message":"353","line":2,"column":38,"nodeType":"290","messageId":"291","endLine":2,"endColumn":49},{"ruleId":"288","severity":1,"message":"328","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":23},{"ruleId":"288","severity":1,"message":"351","line":3,"column":9,"nodeType":"290","messageId":"291","endLine":3,"endColumn":15},{"ruleId":"288","severity":1,"message":"354","line":6,"column":11,"nodeType":"290","messageId":"291","endLine":6,"endColumn":25},{"ruleId":"324","severity":1,"message":"325","line":25,"column":13,"nodeType":"326","messageId":"327","endLine":25,"endColumn":19},{"ruleId":"288","severity":1,"message":"352","line":2,"column":9,"nodeType":"290","messageId":"291","endLine":2,"endColumn":14},{"ruleId":"288","severity":1,"message":"353","line":2,"column":16,"nodeType":"290","messageId":"291","endLine":2,"endColumn":27},{"ruleId":"288","severity":1,"message":"355","line":10,"column":11,"nodeType":"290","messageId":"291","endLine":10,"endColumn":22},{"ruleId":"288","severity":1,"message":"356","line":13,"column":11,"nodeType":"290","messageId":"291","endLine":13,"endColumn":23},{"ruleId":"288","severity":1,"message":"357","line":16,"column":11,"nodeType":"290","messageId":"291","endLine":16,"endColumn":27},{"ruleId":"288","severity":1,"message":"358","line":19,"column":11,"nodeType":"290","messageId":"291","endLine":19,"endColumn":28},{"ruleId":"288","severity":1,"message":"359","line":22,"column":11,"nodeType":"290","messageId":"291","endLine":22,"endColumn":23},{"ruleId":"305","severity":1,"message":"329","line":22,"column":8,"nodeType":"309","endLine":22,"endColumn":10,"suggestions":"360"},{"ruleId":"305","severity":1,"message":"311","line":26,"column":8,"nodeType":"309","endLine":26,"endColumn":21,"suggestions":"361"},{"ruleId":"324","severity":1,"message":"325","line":46,"column":13,"nodeType":"326","messageId":"327","endLine":46,"endColumn":19},{"ruleId":"305","severity":1,"message":"332","line":9,"column":8,"nodeType":"309","endLine":9,"endColumn":10,"suggestions":"362"},{"ruleId":"305","severity":1,"message":"311","line":12,"column":8,"nodeType":"309","endLine":12,"endColumn":14,"suggestions":"363"},"no-native-reassign",["364"],"no-negated-in-lhs",["365"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'axios' is defined but never used.","'auth' is defined but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'_Int' is defined but never used.","'_Float' is defined but never used.","'_String' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'problem_Id'. Either include it or remove the dependency array.","ArrayExpression",["366"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["367"],["364"],["365"],["368"],"React Hook useEffect has missing dependencies: 'Variables' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["369"],["370"],"react/jsx-pascal-case","Imported JSX component _Int must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component _Float must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _String must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'InputBlocks' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["371"],["372"],"React Hook useEffect has missing dependencies: 'Data' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["373"],["374"],["375"],"'CodeBox' is defined but never used.","'Result' is defined but never used.","React Hook useEffect has a missing dependency: 'getOutputs'. Either include it or remove the dependency array.",["376"],"'useRef' is defined but never used.","'tempData' is assigned a value but never used.","'LOGIN_USER' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["377"],["378"],["379"],["380"],"'Button' is defined but never used.","'Input' is defined but never used.","'InputNumber' is defined but never used.","'makeEmptyArray' is assigned a value but never used.","'handleWidth' is assigned a value but never used.","'handleHeight' is assigned a value but never used.","'handleHorizonRep' is assigned a value but never used.","'handelVerticalRep' is assigned a value but never used.","'handleInputs' is assigned a value but never used.",["381"],["382"],["383"],["384"],"no-global-assign","no-unsafe-negation",{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"391","fix":"393"},{"desc":"394","fix":"395"},{"desc":"394","fix":"396"},{"desc":"389","fix":"397"},{"desc":"389","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"391","fix":"405"},{"desc":"391","fix":"406"},{"desc":"389","fix":"407"},{"desc":"394","fix":"408"},{"desc":"394","fix":"409"},{"desc":"389","fix":"410"},{"desc":"389","fix":"411"},"Update the dependencies array to be: [problem_Id]",{"range":"412","text":"413"},"Update the dependencies array to be: [Setting, props]",{"range":"414","text":"415"},"Update the dependencies array to be: [Data, props]",{"range":"416","text":"417"},"Update the dependencies array to be: [Variables, props]",{"range":"418","text":"419"},{"range":"420","text":"419"},"Update the dependencies array to be: [InputBlocks, props]",{"range":"421","text":"422"},{"range":"423","text":"422"},{"range":"424","text":"417"},{"range":"425","text":"417"},"Update the dependencies array to be: [Code, props]",{"range":"426","text":"427"},"Update the dependencies array to be: [getOutputs]",{"range":"428","text":"429"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"430","text":"431"},{"range":"432","text":"419"},{"range":"433","text":"419"},{"range":"434","text":"417"},{"range":"435","text":"422"},{"range":"436","text":"422"},{"range":"437","text":"417"},{"range":"438","text":"417"},[1428,1430],"[problem_Id]",[811,820],"[Setting, props]",[651,657],"[Data, props]",[395,397],"[Variables, props]",[468,479],[565,567],"[InputBlocks, props]",[640,653],[259,261],[325,331],[404,410],"[Code, props]",[989,991],"[getOutputs]",[514,516],"[dispatch, props.history]",[395,397],[468,479],[651,657],[565,567],[640,653],[272,274],[338,344]]