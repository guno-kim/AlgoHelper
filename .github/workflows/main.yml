name: React build
on: 
  push

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout source code.   # 레포지토리 체크아웃
        uses: actions/checkout@master

      - name: Cache Server node modules      # server node modules 캐싱
        id: server-cache
        uses: actions/cache@v2
        with:
          path: ./server/node_modules
          key: ${{ runner.OS }}-server-module-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-server-module-

      - name: Install Server Dependencies   
        if: steps.server-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Cache Client node modules      # client node modules 캐싱
        id: client-cache
        uses: actions/cache@v2
        with:
          path: ./client/node_modules
          key: ${{ runner.OS }}-client-module-${{ hashFiles('**/client/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-client-module-

      - name: Install Client Dependencies    # 의존 파일 설치
        working-directory: ./client
        run: npm install

      - name: Build                   # React Build
        working-directory: ./client
        env:
          CI: ""
        run: npm run build

      - name: client-deploy                  # S3에 배포하기
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CLIENT_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CLIENT_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --region ap-northeast-2 \
            client/build s3://www.algohelper.ga #복사

  server-deploy:
    runs-on: ubuntu-18.04
    needs: build
    strategy:
      matrix:
        appname: ['algohelper-codedeploy']
        deploy-group: ['staging']
        s3-bucket: ['algohelper-codedeploy']
        s3-filename: ['algohelper-aws-codedeploy-${{ github.sha }}']
    
    steps:

      - uses: actions/checkout@master
      

            

      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_SERVER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SERVER_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2      

      - name: AWS Deploy push
        run: |
          aws deploy push \
          --application-name ${{ matrix.appname }} \  #codedeploy 이름
          --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
          --ignore-hidden-files \
          --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
          --source .

      - name: AWS Create Deployment #--deployment-group-name ${{ matrix.deploy-group }} \
        run: |
          aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \
